HIF003
--
--  Copyright (C) 1991-1997 Altera Corporation
--  Any megafunction design, and related net list (encrypted or decrypted),
--  support information, device programming or simulation file, and any other
--  associated documentation or information provided by Altera or a partner
--  under Altera's Megafunction Partnership Program may be used only to
--  program PLD devices (but not masked PLD devices) from Altera.  Any other
--  use of such megafunction design, net list, support information, device
--  programming or simulation file, or any other related documentation or
--  information is prohibited for any other purpose, including, but not
--  limited to modification, reverse engineering, de-compiling, or use with
--  any other silicon devices, unless such use is explicitly licensed under
--  a separate agreement with Altera or a megafunction partner.  Title to
--  the intellectual property, including patents, copyrights, trademarks,
--  trade secrets, or maskworks, embodied in any such megafunction design,
--  net list, support information, device programming or simulation file, or
--  any other related documentation or information provided by Altera or a
--  megafunction partner, remains with Altera, the megafunction partner, or
--  their respective licensors.  No other licenses, including any licenses
--  needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN=0,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc]
		{
			73 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,cout,dataa1,dataa0,datab1,datab0,cin];
			67 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			55 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,cout,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			31 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			21 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,cout,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			15 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result4,result3,result2,result1,result0,cout,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc]
		{
			72 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT1,RESULT0,CIN,DATAB1,DATAB0,DATAA1,DATAA0];
			66 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			54 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			45 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			30 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			20 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT2,RESULT1,RESULT0,CIN,DATAB2,DATAB1,DATAB0,DATAA2,DATAA1,DATAA0];
			14 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			74 [DEPTH=0,WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,data1,data0];
			68 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
			56 [DEPTH=0,WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,data5,data4,data3,data2,data1,data0];
			32 [DEPTH=0,WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			22 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data2,data1,data0];
			16 [DEPTH=0,WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result4,result3,result2,result1,result0,data4,data3,data2,data1,data0];
			13 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
		}
	}
	cmpchain.tdf
	{
		cmpchain [DEVICE_FAMILY,CASCADE_CHAIN_LENGTH,CARRY_CHAIN_LENGTH,CASCADE_CHAIN,CARRY_CHAIN,MODE,ONE_INPUT_CONSTANT,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc]
		{
			63 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			59 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			52 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa0,datab0];
			50 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			41 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			38 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa1,dataa0,datab1,datab0];
			35 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			29 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			26 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			19 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			12 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			10 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa0,datab0];
			9 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			7 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			6 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa1,dataa0,datab1,datab0];
			4 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
		}
	}
	comptree.tdf
	{
		comptree [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=8,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,cmpchain.inc,lpm_constant.inc]
		{
			71 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			65 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			64 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			62 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			60 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			58 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			53 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			51 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			49 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			43 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			42 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			40 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			37 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			36 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			34 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			28 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			27 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			25 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			18 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			11 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			8 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			5 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			3 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
		}
	}
	lpm_compare.tdf
	{
		lpm_compare [DEVICE_FAMILY=FLEX8000,CASCADE_CHAIN_LENGTH=8,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN=MANUAL,CARRY_CHAIN=MANUAL,ONE_INPUT_IS_CONSTANT=NO,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=UNSIGNED,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,altshift.inc]
		{
			70 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB2,DATAB1,DATAB0,DATAA2,DATAA1,DATAA0];
			69 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			61 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AGB,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			57 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			48 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			46 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AGB,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			39 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			33 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			24 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			17 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			2 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
		}
	}
	my_ctl.vhd
	{
		my_ctl [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			47 [] [];
		}
	}
	servo_control.vhd
	{
		servo_control [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			23 [] [];
		}
	}
	ir_sensor.vhd
	{
		ir_sensor [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			44 [] [];
		}
	}
	top_robot.gdf
	{
		top_robot [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	top_robot::(0,0):(0): top_robot.gdf
	{
		clk_div::(0,0):(11): clk_div.vhd
		{
			lpm_compare:2:(29,9):(82): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:14:(33,25):(98): lpm_add_sub.tdf
			{
				addcore:15:(205,4):(48,adder): addcore.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:2:(29,9):(160): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:17:(56,9):(223): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(59,25):(234): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(68,9):(303): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(71,25):(314): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(80,9):(383): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(83,25):(394): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(92,9):(463): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(95,25):(474): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(104,9):(543): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(107,25):(554): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(116,9):(623): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:20:(119,25):(634): lpm_add_sub.tdf
			{
				addcore:21:(205,4):(42,adder): addcore.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		servo_control:23:(0,0):(15): servo_control.vhd
		{
			lpm_compare:24:(25,9):(185): lpm_compare.tdf
			{
				comptree:25:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:26:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:27:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:19:(136,7):(55,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(71,cmp1): cmpchain.tdf;
							cmpchain:19:(136,7):(87,cmp0): cmpchain.tdf;
							comptree:28:(162,4):(103,sub_comptree): comptree.tdf
							{
								cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:30:(28,25):(220): lpm_add_sub.tdf
			{
				addcore:31:(205,4):(66,adder): addcore.tdf;
				altshift:32:(215,2):(106,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(133,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(140,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:33:(25,9):(348): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(25,9):(361): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(25,9):(374): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(25,9):(387): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:17:(33,25):(436): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:17:(33,25):(455): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:17:(39,25):(544): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(43,49):(591): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(43,49):(603): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:48:(43,49):(611): lpm_compare.tdf
			{
				comptree:49:(291,3):(49,comparator): comptree.tdf
				{
					cmpchain:50:(176,5):(45,cmp_end): cmpchain.tdf
					{
						comptree:51:(137,7):(45,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(45,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(57,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(69,cmp0): cmpchain.tdf;
							cmpchain:52:(143,5):(81,cmp_end): cmpchain.tdf;
							comptree:53:(152,4):(91,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(39,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(51,cmp0): cmpchain.tdf;
								comptree:11:(152,4):(63,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:54:(45,53):(634): lpm_add_sub.tdf
			{
				addcore:55:(205,4):(51,adder): addcore.tdf;
				altshift:56:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:33:(53,49):(772): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(53,49):(784): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:57:(53,49):(792): lpm_compare.tdf
			{
				comptree:58:(291,3):(49,comparator): comptree.tdf
				{
					cmpchain:59:(176,5):(45,cmp_end): cmpchain.tdf
					{
						comptree:60:(137,7):(45,comp): comptree.tdf
						{
							cmpchain:19:(136,7):(45,cmp0): cmpchain.tdf;
							cmpchain:29:(143,5):(61,cmp_end): cmpchain.tdf;
							comptree:43:(162,4):(75,sub_comptree): comptree.tdf
							{
								cmpchain:12:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:13:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:54:(55,57):(816): lpm_add_sub.tdf
			{
				addcore:55:(205,4):(51,adder): addcore.tdf;
				altshift:56:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:17:(39,25):(1014): lpm_compare.tdf
			{
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(68,49):(1061): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(68,49):(1073): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:48:(68,49):(1081): lpm_compare.tdf
			{
				comptree:49:(291,3):(49,comparator): comptree.tdf
				{
					cmpchain:50:(176,5):(45,cmp_end): cmpchain.tdf
					{
						comptree:51:(137,7):(45,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(45,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(57,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(69,cmp0): cmpchain.tdf;
							cmpchain:52:(143,5):(81,cmp_end): cmpchain.tdf;
							comptree:53:(152,4):(91,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(39,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(51,cmp0): cmpchain.tdf;
								comptree:11:(152,4):(63,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:54:(70,53):(1104): lpm_add_sub.tdf
			{
				addcore:55:(205,4):(51,adder): addcore.tdf;
				altshift:56:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:33:(78,49):(1242): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:33:(78,49):(1254): lpm_compare.tdf
			{
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:57:(78,49):(1262): lpm_compare.tdf
			{
				comptree:58:(291,3):(49,comparator): comptree.tdf
				{
					cmpchain:59:(176,5):(45,cmp_end): cmpchain.tdf
					{
						comptree:60:(137,7):(45,comp): comptree.tdf
						{
							cmpchain:19:(136,7):(45,cmp0): cmpchain.tdf;
							cmpchain:29:(143,5):(61,cmp_end): cmpchain.tdf;
							comptree:43:(162,4):(75,sub_comptree): comptree.tdf
							{
								cmpchain:12:(176,5):(35,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:13:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:54:(80,57):(1286): lpm_add_sub.tdf
			{
				addcore:55:(205,4):(51,adder): addcore.tdf;
				altshift:56:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		my_ctl:47:(0,0):(33): my_ctl.vhd
		{
			lpm_compare:61:(68,41):(203): lpm_compare.tdf
			{
				comptree:62:(291,3):(53,comparator): comptree.tdf
				{
					cmpchain:63:(176,5):(49,cmp_end): cmpchain.tdf
					{
						comptree:64:(137,7):(49,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(49,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(61,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(73,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(85,cmp0): cmpchain.tdf;
							cmpchain:52:(143,5):(97,cmp_end): cmpchain.tdf;
							comptree:65:(152,4):(107,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(41,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(53,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(65,cmp_end): cmpchain.tdf;
								comptree:8:(152,4):(75,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(82,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(89,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:66:(71,49):(228): lpm_add_sub.tdf
			{
				addcore:67:(205,4):(57,adder): addcore.tdf;
				altshift:68:(215,2):(88,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(109,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(116,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:69:(91,41):(517): lpm_compare.tdf
			{
				comptree:62:(291,3):(53,comparator): comptree.tdf
				{
					cmpchain:63:(176,5):(49,cmp_end): cmpchain.tdf
					{
						comptree:64:(137,7):(49,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(49,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(61,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(73,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(85,cmp0): cmpchain.tdf;
							cmpchain:52:(143,5):(97,cmp_end): cmpchain.tdf;
							comptree:65:(152,4):(107,sub_comptree): comptree.tdf
							{
								cmpchain:38:(136,7):(41,cmp1): cmpchain.tdf;
								cmpchain:9:(136,7):(53,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(65,cmp_end): cmpchain.tdf;
								comptree:8:(152,4):(75,sub_comptree): comptree.tdf
								{
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									}
								}
							}
						}
					}
				}
				altshift:13:(305,2):(82,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(89,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:66:(94,49):(542): lpm_add_sub.tdf
			{
				addcore:67:(205,4):(57,adder): addcore.tdf;
				altshift:68:(215,2):(88,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(109,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(116,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		ir_sensor:44:(0,0):(36): ir_sensor.vhd
		{
			lpm_compare:70:(25,1):(43): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:72:(30,17):(54): lpm_add_sub.tdf
			{
				addcore:73:(205,4):(39,adder): addcore.tdf;
				altshift:74:(215,2):(52,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(61,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(68,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(137): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(38,17):(149): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:45:(39,25):(169): lpm_add_sub.tdf
			{
				addcore:15:(205,4):(48,adder): addcore.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(259): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(43,17):(277): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:46:(43,17):(298): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(369): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(48,17):(381): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:45:(49,25):(401): lpm_add_sub.tdf
			{
				addcore:15:(205,4):(48,adder): addcore.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(491): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(53,17):(509): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:46:(53,17):(530): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(601): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(58,17):(619): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:46:(58,17):(640): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:70:(35,1):(711): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:2:(63,17):(723): lpm_compare.tdf
			{
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_add_sub:45:(64,25):(743): lpm_add_sub.tdf
			{
				addcore:15:(205,4):(48,adder): addcore.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_compare:70:(21,9):(906): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
			lpm_compare:70:(22,9):(923): lpm_compare.tdf
			{
				comptree:71:(291,3):(41,comparator): comptree.tdf
				{
					cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
				}
				altshift:13:(305,2):(58,aeb_ext_lat_ffs): altshift.tdf;
				altshift:13:(306,2):(65,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		dec_7seg::(0,0):(54): dec_7seg.vhd;
		dec_7seg::(0,0):(55): dec_7seg.vhd;
	}
}

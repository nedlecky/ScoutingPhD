HIF003
--
--  Copyright (C) 1991-1997 Altera Corporation
--  Any megafunction design, and related net list (encrypted or decrypted),
--  support information, device programming or simulation file, and any other
--  associated documentation or information provided by Altera or a partner
--  under Altera's Megafunction Partnership Program may be used only to
--  program PLD devices (but not masked PLD devices) from Altera.  Any other
--  use of such megafunction design, net list, support information, device
--  programming or simulation file, or any other related documentation or
--  information is prohibited for any other purpose, including, but not
--  limited to modification, reverse engineering, de-compiling, or use with
--  any other silicon devices, unless such use is explicitly licensed under
--  a separate agreement with Altera or a megafunction partner.  Title to
--  the intellectual property, including patents, copyrights, trademarks,
--  trade secrets, or maskworks, embodied in any such megafunction design,
--  net list, support information, device programming or simulation file, or
--  any other related documentation or information provided by Altera or a
--  megafunction partner, remains with Altera, the megafunction partner, or
--  their respective licensors.  No other licenses, including any licenses
--  needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN=0,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc]
		{
			58 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,cout,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			33 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,cout,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			10 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			46 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=5,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,cout,result0,result1,result2,result3,result4];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc]
		{
			57 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			32 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			9 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			45 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=5,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			59 [DEPTH=0,WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,data5,data4,data3,data2,data1,data0];
			34 [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,data3,data2,data1,data0];
			11 [DEPTH=0,WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			8 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			47 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=5,DEPTH=0] [data0,data1,data2,data3,data4,result0,result1,result2,result3,result4];
		}
	}
	cmpchain.tdf
	{
		cmpchain [DEVICE_FAMILY,CASCADE_CHAIN_LENGTH,CARRY_CHAIN_LENGTH,CASCADE_CHAIN,CARRY_CHAIN,MODE,ONE_INPUT_CONSTANT,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc]
		{
			62 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			54 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			39 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa0,datab0];
			37 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			31 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa0,datab0];
			29 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			24 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			22 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa0,datab0];
			20 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			19 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=1,ONE_INPUT_CONSTANT=0,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa1,dataa0,datab1,datab0];
			17 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			16 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,agb,dataa1,dataa0,datab1,datab0];
			14 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			7 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			5 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			3 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,MODE=0,ONE_INPUT_CONSTANT=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			43 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			50 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
		}
	}
	comptree.tdf
	{
		comptree [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=8,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,cmpchain.inc,lpm_constant.inc]
		{
			63 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			61 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			56 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			55 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			53 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			40 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa1,dataa0,datab1,datab0];
			38 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			36 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			30 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			28 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0];
			26 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0];
			23 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa1,dataa0,datab1,datab0];
			21 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			18 [MODE=1,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=0,CHAIN_LENGTH=1,lpm_width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			15 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			13 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [agb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			6 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			4 [MODE=0,BURRIED_CLOCKED=0,OUTPUTS_CLOCKED=1,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=1,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			2 [MODE=0,BURRIED_CLOCKED=1,OUTPUTS_CLOCKED=0,ONE_INPUT_CONSTANT=1,CHAIN_LENGTH=8,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aeb,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			42 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			44 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			49 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
			51 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
		}
	}
	lpm_compare.tdf
	{
		lpm_compare [DEVICE_FAMILY=FLEX8000,CASCADE_CHAIN_LENGTH=8,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN=MANUAL,CARRY_CHAIN=MANUAL,ONE_INPUT_IS_CONSTANT=NO,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=UNSIGNED,lpm_width,USE_LPM_FOR_AHDL_OPERATORS] [comptree.inc,altshift.inc]
		{
			60 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			52 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			35 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			27 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			25 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			12 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [ALB,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			1 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN_LENGTH=2,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,ONE_INPUT_IS_CONSTANT=YES,CHAIN_SIZE=8,LPM_PIPELINE=0,LPM_REPRESENTATION=SIGNED,lpm_width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [AEB,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			41 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,ALB];
			48 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,AEB];
		}
	}
	servo_control.vhd
	{
		servo_control [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	servo_control::(0,0):(0): servo_control.vhd
	{
		lpm_compare:1:(25,9):(185): lpm_compare.tdf
		{
			comptree:2:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:3:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:4:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:5:(136,7):(55,cmp2): cmpchain.tdf;
						cmpchain:5:(136,7):(71,cmp1): cmpchain.tdf;
						cmpchain:5:(136,7):(87,cmp0): cmpchain.tdf;
						comptree:6:(162,4):(103,sub_comptree): comptree.tdf
						{
							cmpchain:7:(176,5):(37,cmp_end): cmpchain.tdf;
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_add_sub:9:(28,25):(220): lpm_add_sub.tdf
		{
			addcore:10:(205,4):(66,adder): addcore.tdf;
			altshift:11:(215,2):(106,result_ext_latency_ffs): altshift.tdf;
			altshift:8:(217,2):(133,carry_ext_latency_ffs): altshift.tdf;
			altshift:8:(219,2):(140,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_compare:12:(25,9):(348): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(25,9):(361): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(25,9):(374): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(25,9):(387): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:25:(33,25):(436): lpm_compare.tdf
		{
			comptree:26:(291,3):(43,comparator): comptree.tdf
			{
				cmpchain:5:(176,5):(39,cmp_end): cmpchain.tdf;
			}
			altshift:8:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:25:(33,25):(455): lpm_compare.tdf
		{
			comptree:26:(291,3):(43,comparator): comptree.tdf
			{
				cmpchain:5:(176,5):(39,cmp_end): cmpchain.tdf;
			}
			altshift:8:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:25:(39,25):(544): lpm_compare.tdf
		{
			comptree:26:(291,3):(43,comparator): comptree.tdf
			{
				cmpchain:5:(176,5):(39,cmp_end): cmpchain.tdf;
			}
			altshift:8:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(43,49):(591): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(43,49):(603): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:52:(43,49):(611): lpm_compare.tdf
		{
			comptree:53:(291,3):(49,comparator): comptree.tdf
			{
				cmpchain:54:(176,5):(45,cmp_end): cmpchain.tdf
				{
					comptree:55:(137,7):(45,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(45,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(57,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(69,cmp0): cmpchain.tdf;
						cmpchain:31:(143,5):(81,cmp_end): cmpchain.tdf;
						comptree:56:(152,4):(91,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(39,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(51,cmp0): cmpchain.tdf;
							comptree:23:(152,4):(63,sub_comptree): comptree.tdf
							{
								cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
							}
						}
					}
				}
			}
			altshift:8:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_add_sub:57:(45,53):(634): lpm_add_sub.tdf
		{
			addcore:58:(205,4):(51,adder): addcore.tdf;
			altshift:59:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
			altshift:8:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
			altshift:8:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_compare:12:(53,49):(772): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(53,49):(784): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:60:(53,49):(792): lpm_compare.tdf
		{
			comptree:61:(291,3):(49,comparator): comptree.tdf
			{
				cmpchain:62:(176,5):(45,cmp_end): cmpchain.tdf
				{
					comptree:63:(137,7):(45,comp): comptree.tdf
					{
						cmpchain:5:(136,7):(45,cmp0): cmpchain.tdf;
						cmpchain:7:(143,5):(61,cmp_end): cmpchain.tdf;
						comptree:40:(162,4):(75,sub_comptree): comptree.tdf
						{
							cmpchain:24:(176,5):(35,cmp_end): cmpchain.tdf;
						}
					}
				}
			}
			altshift:8:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_add_sub:57:(55,57):(816): lpm_add_sub.tdf
		{
			addcore:58:(205,4):(51,adder): addcore.tdf;
			altshift:59:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
			altshift:8:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
			altshift:8:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_compare:25:(39,25):(1014): lpm_compare.tdf
		{
			comptree:26:(291,3):(43,comparator): comptree.tdf
			{
				cmpchain:5:(176,5):(39,cmp_end): cmpchain.tdf;
			}
			altshift:8:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(68,49):(1061): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(68,49):(1073): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:52:(68,49):(1081): lpm_compare.tdf
		{
			comptree:53:(291,3):(49,comparator): comptree.tdf
			{
				cmpchain:54:(176,5):(45,cmp_end): cmpchain.tdf
				{
					comptree:55:(137,7):(45,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(45,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(57,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(69,cmp0): cmpchain.tdf;
						cmpchain:31:(143,5):(81,cmp_end): cmpchain.tdf;
						comptree:56:(152,4):(91,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(39,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(51,cmp0): cmpchain.tdf;
							comptree:23:(152,4):(63,sub_comptree): comptree.tdf
							{
								cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
							}
						}
					}
				}
			}
			altshift:8:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_add_sub:57:(70,53):(1104): lpm_add_sub.tdf
		{
			addcore:58:(205,4):(51,adder): addcore.tdf;
			altshift:59:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
			altshift:8:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
			altshift:8:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_compare:12:(78,49):(1242): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:12:(78,49):(1254): lpm_compare.tdf
		{
			comptree:13:(291,3):(59,comparator): comptree.tdf
			{
				cmpchain:14:(176,5):(55,cmp_end): cmpchain.tdf
				{
					comptree:15:(137,7):(55,comp): comptree.tdf
					{
						cmpchain:16:(136,7):(55,cmp5): cmpchain.tdf;
						cmpchain:16:(136,7):(67,cmp4): cmpchain.tdf;
						cmpchain:16:(136,7):(79,cmp3): cmpchain.tdf;
						cmpchain:16:(136,7):(91,cmp2): cmpchain.tdf;
						cmpchain:16:(136,7):(103,cmp1): cmpchain.tdf;
						cmpchain:17:(136,7):(115,cmp0): cmpchain.tdf;
						comptree:18:(152,4):(127,sub_comptree): comptree.tdf
						{
							cmpchain:19:(136,7):(43,cmp2): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:20:(136,7):(67,cmp0): cmpchain.tdf;
							comptree:21:(152,4):(79,sub_comptree): comptree.tdf
							{
								cmpchain:20:(136,7):(37,cmp0): cmpchain.tdf;
								cmpchain:22:(143,5):(49,cmp_end): cmpchain.tdf;
								comptree:23:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:24:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									cmpchain:20:(193,5):(47,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
			}
			altshift:8:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_compare:60:(78,49):(1262): lpm_compare.tdf
		{
			comptree:61:(291,3):(49,comparator): comptree.tdf
			{
				cmpchain:62:(176,5):(45,cmp_end): cmpchain.tdf
				{
					comptree:63:(137,7):(45,comp): comptree.tdf
					{
						cmpchain:5:(136,7):(45,cmp0): cmpchain.tdf;
						cmpchain:7:(143,5):(61,cmp_end): cmpchain.tdf;
						comptree:40:(162,4):(75,sub_comptree): comptree.tdf
						{
							cmpchain:24:(176,5):(35,cmp_end): cmpchain.tdf;
						}
					}
				}
			}
			altshift:8:(305,2):(74,aeb_ext_lat_ffs): altshift.tdf;
			altshift:8:(306,2):(81,agb_ext_lat_ffs): altshift.tdf;
		}
		lpm_add_sub:57:(80,57):(1286): lpm_add_sub.tdf
		{
			addcore:58:(205,4):(51,adder): addcore.tdf;
			altshift:59:(215,2):(76,result_ext_latency_ffs): altshift.tdf;
			altshift:8:(217,2):(93,carry_ext_latency_ffs): altshift.tdf;
			altshift:8:(219,2):(100,oflow_ext_latency_ffs): altshift.tdf;
		}
	}
}

HIF003
--
--  Copyright (C) 1991-1997 Altera Corporation
--  Any megafunction design, and related net list (encrypted or decrypted),
--  support information, device programming or simulation file, and any other
--  associated documentation or information provided by Altera or a partner
--  under Altera's Megafunction Partnership Program may be used only to
--  program PLD devices (but not masked PLD devices) from Altera.  Any other
--  use of such megafunction design, net list, support information, device
--  programming or simulation file, or any other related documentation or
--  information is prohibited for any other purpose, including, but not
--  limited to modification, reverse engineering, de-compiling, or use with
--  any other silicon devices, unless such use is explicitly licensed under
--  a separate agreement with Altera or a megafunction partner.  Title to
--  the intellectual property, including patents, copyrights, trademarks,
--  trade secrets, or maskworks, embodied in any such megafunction design,
--  net list, support information, device programming or simulation file, or
--  any other related documentation or information provided by Altera or a
--  megafunction partner, remains with Altera, the megafunction partner, or
--  their respective licensors.  No other licenses, including any licenses
--  needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	ir_sensor.vhd
	{
		ir_sensor [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			53 [] [];
		}
	}
	servo_control.vhd
	{
		servo_control [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			23 [] [];
		}
	}
	clk_div.vhd
	{
		clk_div [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			1 [] [];
		}
	}
	lpm_compare.tdf
	{
		lpm_compare [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=NO,CARRY_CHAIN=MANUAL,CASCADE_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN_LENGTH=8,DEVICE_FAMILY=FLEX8000] [altshift.inc,comptree.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,ALB];
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAB0,DATAB1,DATAB2,DATAB3,AEB];
			24 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAA9,DATAA10,DATAA11,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,DATAB9,DATAB10,DATAB11,AEB];
			33 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAA9,DATAA10,DATAA11,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,DATAB9,DATAB10,DATAB11,ALB];
			39 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,ALB];
			47 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,AEB];
			55 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,AGB];
			56 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,AEB];
		}
	}
	comptree.tdf
	{
		comptree [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [lpm_constant.inc,cmpchain.inc,comptree.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [datab0,datab1,datab2,dataa0,dataa1,dataa2,agb];
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [datab0,datab1,dataa0,dataa1,agb];
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,aeb];
			25 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,aeb];
			27 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,aeb];
			28 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,dataa0,dataa1,dataa2,aeb];
			34 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,agb];
			36 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,agb];
			37 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			40 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,agb];
			42 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,agb];
			48 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,aeb];
			50 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,aeb];
			52 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,dataa0,dataa1,aeb];
			57 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
			59 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
		}
	}
	cmpchain.tdf
	{
		cmpchain [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,ONE_INPUT_CONSTANT,MODE,CARRY_CHAIN,CASCADE_CHAIN,CARRY_CHAIN_LENGTH,CASCADE_CHAIN_LENGTH,DEVICE_FAMILY] [comptree.inc]
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb,aeb];
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb];
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=1,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,dataa0,agb,aeb];
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,aeb];
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,aeb];
			26 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,aeb];
			29 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,dataa0,dataa1,dataa2,aeb];
			35 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=12,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,agb];
			38 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb,aeb];
			41 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,agb];
			43 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=1,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,dataa0,agb,aeb];
			49 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=5,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,aeb];
			51 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=1,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,dataa0,aeb];
			58 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=5,DEPTH=0] [data0,data1,data2,data3,data4,result0,result1,result2,result3,result4];
			22 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=3,DEPTH=0] [data0,data1,data2,result0,result1,result2];
			32 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=11,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			46 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=4,DEPTH=0] [data0,data1,data2,data3,result0,result1,result2,result3];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=5,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAB0,DATAB1,DATAB2,CIN,RESULT0,RESULT1,RESULT2];
			30 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=11,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAA9,DATAA10,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,DATAB9,DATAB10,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8,RESULT9,RESULT10];
			44 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=4,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAB0,DATAB1,DATAB2,DATAB3,CIN,RESULT0,RESULT1,RESULT2,RESULT3];
			54 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=5,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN=0,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [addcore.inc]
		{
			15 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=5,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,cout,result0,result1,result2,result3,result4];
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,dataa0,dataa1,dataa2,cout,result0,result1,result2];
			31 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=11,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,cout,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			45 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=4,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,cout,result0,result1,result2,result3];
		}
	}
	top_motor.gdf
	{
		top_motor [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	top_motor::(0,0):(0): top_motor.gdf
	{
		ir_sensor::(0,0):(29): ir_sensor.vhd
		{
			lpm_compare:55:(40,17):(444): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:2:(40,17):(423): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:54:(36,17):(317): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:2:(35,17):(297): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:55:(30,17):(215): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:2:(30,17):(194): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:54:(26,17):(87): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:2:(25,17):(67): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
		}
		servo_control::(0,0):(15): servo_control.vhd
		{
			lpm_add_sub:14:(80,57):(1181): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:56:(78,49):(1160): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:57:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:58:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:59:(137,7):(43,comp): comptree.tdf
						{
							comptree:52:(162,4):(71,sub_comptree): comptree.tdf
							{
								cmpchain:12:(176,5):(35,cmp_end): cmpchain.tdf;
							}
							cmpchain:12:(143,5):(59,cmp_end): cmpchain.tdf;
							cmpchain:19:(136,7):(43,cmp0): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(78,49):(1153): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(78,49):(1141): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:14:(70,53):(1016): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:2:(68,49):(996): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(68,49):(989): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(68,49):(977): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:17:(39,25):(931): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:14:(55,57):(758): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:56:(53,49):(737): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:57:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:58:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:59:(137,7):(43,comp): comptree.tdf
						{
							comptree:52:(162,4):(71,sub_comptree): comptree.tdf
							{
								cmpchain:12:(176,5):(35,cmp_end): cmpchain.tdf;
							}
							cmpchain:12:(143,5):(59,cmp_end): cmpchain.tdf;
							cmpchain:19:(136,7):(43,cmp0): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(53,49):(730): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(53,49):(718): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:14:(45,53):(593): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:2:(43,49):(573): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(43,49):(566): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(43,49):(554): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:17:(39,25):(508): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_compare:17:(33,25):(435): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_compare:17:(33,25):(416): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_compare:33:(25,9):(379): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(25,9):(366): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(25,9):(353): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_compare:33:(25,9):(340): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:34:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:35:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:36:(137,7):(55,comp): comptree.tdf
						{
							comptree:37:(152,4):(127,sub_comptree): comptree.tdf
							{
								comptree:8:(152,4):(79,sub_comptree): comptree.tdf
								{
									comptree:11:(152,4):(59,sub_comptree): comptree.tdf
									{
										cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
										cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
									}
									cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
									cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
								}
								cmpchain:9:(136,7):(67,cmp0): cmpchain.tdf;
								cmpchain:38:(136,7):(55,cmp1): cmpchain.tdf;
								cmpchain:38:(136,7):(43,cmp2): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(115,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(103,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(91,cmp2): cmpchain.tdf;
							cmpchain:6:(136,7):(79,cmp3): cmpchain.tdf;
							cmpchain:6:(136,7):(67,cmp4): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp5): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:30:(28,25):(212): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(140,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(133,carry_ext_latency_ffs): altshift.tdf;
				altshift:32:(215,2):(106,result_ext_latency_ffs): altshift.tdf;
				addcore:31:(205,4):(66,adder): addcore.tdf;
			}
			lpm_compare:24:(25,9):(177): lpm_compare.tdf
			{
				altshift:13:(306,2):(101,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(94,aeb_ext_lat_ffs): altshift.tdf;
				comptree:25:(291,3):(59,comparator): comptree.tdf
				{
					cmpchain:26:(176,5):(55,cmp_end): cmpchain.tdf
					{
						comptree:27:(137,7):(55,comp): comptree.tdf
						{
							comptree:28:(162,4):(103,sub_comptree): comptree.tdf
							{
								cmpchain:29:(176,5):(37,cmp_end): cmpchain.tdf;
							}
							cmpchain:19:(136,7):(87,cmp0): cmpchain.tdf;
							cmpchain:19:(136,7):(71,cmp1): cmpchain.tdf;
							cmpchain:19:(136,7):(55,cmp2): cmpchain.tdf;
						}
					}
				}
			}
		}
		clk_div::(0,0):(11): clk_div.vhd
		{
			lpm_add_sub:20:(119,25):(634): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(116,9):(623): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:20:(107,25):(554): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(104,9):(543): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:20:(95,25):(474): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(92,9):(463): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:20:(83,25):(394): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(80,9):(383): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:20:(71,25):(314): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(68,9):(303): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_add_sub:20:(59,25):(234): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(76,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(69,carry_ext_latency_ffs): altshift.tdf;
				altshift:22:(215,2):(58,result_ext_latency_ffs): altshift.tdf;
				addcore:21:(205,4):(42,adder): addcore.tdf;
			}
			lpm_compare:17:(56,9):(223): lpm_compare.tdf
			{
				altshift:13:(306,2):(69,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(62,aeb_ext_lat_ffs): altshift.tdf;
				comptree:18:(291,3):(43,comparator): comptree.tdf
				{
					cmpchain:19:(176,5):(39,cmp_end): cmpchain.tdf;
				}
			}
			lpm_compare:2:(29,9):(160): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
			lpm_add_sub:14:(33,25):(98): lpm_add_sub.tdf
			{
				altshift:13:(219,2):(92,oflow_ext_latency_ffs): altshift.tdf;
				altshift:13:(217,2):(85,carry_ext_latency_ffs): altshift.tdf;
				altshift:16:(215,2):(70,result_ext_latency_ffs): altshift.tdf;
				addcore:15:(205,4):(48,adder): addcore.tdf;
			}
			lpm_compare:2:(29,9):(82): lpm_compare.tdf
			{
				altshift:13:(306,2):(77,agb_ext_lat_ffs): altshift.tdf;
				altshift:13:(305,2):(70,aeb_ext_lat_ffs): altshift.tdf;
				comptree:3:(291,3):(47,comparator): comptree.tdf
				{
					cmpchain:4:(176,5):(43,cmp_end): cmpchain.tdf
					{
						comptree:5:(137,7):(43,comp): comptree.tdf
						{
							comptree:8:(152,4):(79,sub_comptree): comptree.tdf
							{
								comptree:11:(152,4):(59,sub_comptree): comptree.tdf
								{
									cmpchain:9:(193,5):(47,gt_cmp_end): cmpchain.tdf;
									cmpchain:12:(188,4):(35,eq_cmp_end): cmpchain.tdf;
								}
								cmpchain:10:(143,5):(49,cmp_end): cmpchain.tdf;
								cmpchain:9:(136,7):(37,cmp0): cmpchain.tdf;
							}
							cmpchain:7:(136,7):(67,cmp0): cmpchain.tdf;
							cmpchain:6:(136,7):(55,cmp1): cmpchain.tdf;
							cmpchain:6:(136,7):(43,cmp2): cmpchain.tdf;
						}
					}
				}
			}
		}
	}
}

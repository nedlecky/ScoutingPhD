HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_compare.tdf
	{
		lpm_compare [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=NO,CARRY_CHAIN=MANUAL,CASCADE_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN_LENGTH=8,DEVICE_FAMILY=FLEX8000] [altshift.inc,comptree.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,ALB];
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,LPM_REPRESENTATION=SIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [DATAA0,DATAA1,DATAA2,DATAA3,DATAB0,DATAB1,DATAB2,DATAB3,AEB];
		}
	}
	comptree.tdf
	{
		comptree [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [lpm_constant.inc,cmpchain.inc,comptree.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [datab0,datab1,datab2,dataa0,dataa1,dataa2,agb];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [datab0,datab1,dataa0,dataa1,agb];
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,aeb];
		}
	}
	cmpchain.tdf
	{
		cmpchain [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,ONE_INPUT_CONSTANT,MODE,CARRY_CHAIN,CASCADE_CHAIN,CARRY_CHAIN_LENGTH,CASCADE_CHAIN_LENGTH,DEVICE_FAMILY] [comptree.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,agb];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb,aeb];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb];
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,agb];
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=1,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,dataa0,agb,aeb];
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,aeb];
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,aeb];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			12 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,result0];
			15 [DEPTH=0,WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,result0,result1,result2,result3,result4];
			21 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,result0,result1,result2];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			23 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT2,RESULT1,RESULT0,CIN,DATAB2,DATAB1,DATAB0,DATAA2,DATAA1,DATAA0];
			13 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAB0,DATAB1,DATAB2,CIN,RESULT0,RESULT1,RESULT2];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			24 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			22 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result4,result3,result2,result1,result0,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0,cin];
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=5,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,cout,result0,result1,result2,result3,result4];
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,dataa0,dataa1,dataa2,cout,result0,result1,result2];
		}
	}
	clk_div.vhd
	{
		clk_div [] [U5125632.DLS,U9092257.DLS,U9587408.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	clk_div::(0,0):(0): clk_div.vhd
	{
		lpm_add_sub:13:(33,25):(119): lpm_add_sub.tdf
		{
			addcore:22:(212,4):(49,adder): addcore.tdf;
			altshift:15:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(59,25):(279): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(71,25):(362): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(83,25):(445): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(95,25):(528): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(107,25):(611): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(119,25):(694): lpm_add_sub.tdf
		{
			addcore:24:(212,4):(43,adder): addcore.tdf;
			altshift:21:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
			altshift:12:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
			altshift:12:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
		}
	}
}

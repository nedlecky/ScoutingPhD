NDB006
The number of symbol table entries is: 2
The length of the symbol table is: 50

Index Hierarchy Path
----- --------------
!	&null_hpath&
.	|LPM_RAM_DQ:data_memory|altram:sram|

The number of name info structs is : 62

InsOrder BitField SymTableIndex NextSyn SynParent Loc ChainType NextChain ChainParent FanOut DirExp ParExp ShareExp NodeName
-------- -------- ------------- ------- --------- --- --------- --------- ----------- ------ ------ ------ -------- --------
"	IeEA	!	51	9	:47	"p
#	L8f/	!	51	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	:48	"q
$	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address0	!	address0	"&
%	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address1	!	address1	"%
&	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address2	!	address2	"$
'	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address3	!	address3	"#
(	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address4	!	address4	""
)	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address5	!	address5	"!
*	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address6	!	address6	~
+	"?%_n	!	21	9	16	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	address7	!	address7	}
,	(@\6H	!	24	9	17	#	P	Q	X	Y	Z	[	\	]	^	_	R	S	T	U	V	W	clock	"9
-	IeEZ	!	23	17	memread	"7
.	L8ef	!	23	17	1	#	memwrite	"8
/	"<R?c	!	20	17	read_data0	!	read_data0	|
0	"<R?c	!	20	17	read_data1	!	read_data1	{
1	"<R?c	!	20	17	read_data10	!	read_data10	r
2	"<R?c	!	20	17	read_data11	!	read_data11	q
3	"<R?c	!	20	17	read_data12	!	read_data12	p
4	"<R?c	!	20	17	read_data13	!	read_data13	o
5	"<R?c	!	20	17	read_data14	!	read_data14	n
6	"<R?c	!	20	17	read_data15	!	read_data15	m
7	"<R?c	!	20	17	read_data2	!	read_data2	z
8	"<R?c	!	20	17	read_data3	!	read_data3	y
9	"<R?c	!	20	17	read_data4	!	read_data4	x
:	"<R?c	!	20	17	read_data5	!	read_data5	w
;	"<R?c	!	20	17	read_data6	!	read_data6	v
<	"<R?c	!	20	17	read_data7	!	read_data7	u
=	"<R?c	!	20	17	read_data8	!	read_data8	t
>	"<R?c	!	20	17	read_data9	!	read_data9	s
?	"?%_n	!	22	9	1	P	write_data0	!	write_data0	"6
@	"?%_n	!	22	9	1	Q	write_data1	!	write_data1	"5
A	"?%_n	!	22	9	1	R	write_data10	!	write_data10	",
B	"?%_n	!	22	9	1	S	write_data11	!	write_data11	"+
C	"?%_n	!	22	9	1	T	write_data12	!	write_data12	"*
D	"?%_n	!	22	9	1	U	write_data13	!	write_data13	")
E	"?%_n	!	22	9	1	V	write_data14	!	write_data14	"(
F	"?%_n	!	22	9	1	W	write_data15	!	write_data15	"'
G	"?%_n	!	22	9	1	X	write_data2	!	write_data2	"4
H	"?%_n	!	22	9	1	Y	write_data3	!	write_data3	"3
I	"?%_n	!	22	9	1	Z	write_data4	!	write_data4	"2
J	"?%_n	!	22	9	1	[	write_data5	!	write_data5	"1
K	"?%_n	!	22	9	1	\	write_data6	!	write_data6	"0
L	"?%_n	!	22	9	1	]	write_data7	!	write_data7	"/
M	"?%_n	!	22	9	1	^	write_data8	!	write_data8	".
N	"?%_n	!	22	9	1	_	write_data9	!	write_data9	"-
O	#/?91	.	101	4	content	0	$P
P	#1pY}	.	111	12	1	/	segment0_0	1	$`
Q	#1pY}	.	111	12	1	0	segment0_1	1	$_
R	#1pY}	.	111	12	1	1	segment0_10	1	$V
S	#1pY}	.	111	12	1	2	segment0_11	1	$U
T	#1pY}	.	111	12	1	3	segment0_12	1	$T
U	#1pY}	.	111	12	1	4	segment0_13	1	$S
V	#1pY}	.	111	12	1	5	segment0_14	1	$R
W	#1pY}	.	111	12	1	6	segment0_15	1	$Q
X	#1pY}	.	111	12	1	7	segment0_2	1	$^
Y	#1pY}	.	111	12	1	8	segment0_3	1	$]
Z	#1pY}	.	111	12	1	9	segment0_4	1	$\
[	#1pY}	.	111	12	1	:	segment0_5	1	$[
\	#1pY}	.	111	12	1	;	segment0_6	1	$Z
]	#1pY}	.	111	12	1	<	segment0_7	1	$Y
^	#1pY}	.	111	12	1	=	segment0_8	1	$X
_	#1pY}	.	111	12	1	>	segment0_9	1	$W

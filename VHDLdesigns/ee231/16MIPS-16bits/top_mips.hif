HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	declut.tdf
	{
		declut [LATENCY,TOT_LEVELS,STAGE,width,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,bypassff.inc]
		{
			42 [LATENCY=0,TOT_LEVELS=2,STAGE=1,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
			40 [LATENCY=0,TOT_LEVELS=2,STAGE=0,width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq31,eq30,eq29,eq28,eq27,eq26,eq25,eq24,eq23,eq22,eq21,eq20,eq19,eq18,eq17,eq16,eq15,eq14,eq13,eq12,eq11,eq10,eq9,eq8,eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data4,data3,data2,data1,data0,enable];
			27 [LATENCY=0,TOT_LEVELS=1,STAGE=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN=MANUAL,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			38 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=32,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq31,eq30,eq29,eq28,eq27,eq26,eq25,eq24,eq23,eq22,eq21,eq20,eq19,eq18,eq17,eq16,eq15,eq14,eq13,eq12,eq11,eq10,eq9,eq8,eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data4,data3,data2,data1,data0,enable];
			25 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=8,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			37 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=3,LEVEL=2,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			36 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=3,LEVEL=1,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			35 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=3,LEVEL=0,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			34 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=3,LEVEL=1,SIZE=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0,select3,select2,select1,select0];
			33 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=3,LEVEL=2,SIZE=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data31,data30,data29,data28,data27,data26,data25,data24,data23,data22,data21,data20,data19,data18,data17,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0,select4,select3,select2,select1,select0];
			24 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			23 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=0,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			22 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data7,data6,data5,data4,data3,data2,data1,data0,select2,select1,select0];
		}
	}
	bypassff.tdf
	{
		bypassff [WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			41 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,q1,q0,d2,d1,d0];
			32 [WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q4,q3,q2,q1,q0,d4,d3,d2,d1,d0];
			31 [WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q4,d4,d3,d2,d1,d0];
			21 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,d2,d1,d0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			30 [LPM_PIPELINE=0,LPM_WIDTHS=5,LPM_SIZE=32,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data31_15,data31_14,data31_13,data31_12,data31_11,data31_10,data31_9,data31_8,data31_7,data31_6,data31_5,data31_4,data31_3,data31_2,data31_1,data31_0,data30_15,data30_14,data30_13,data30_12,data30_11,data30_10,data30_9,data30_8,data30_7,data30_6,data30_5,data30_4,data30_3,data30_2,data30_1,data30_0,data29_15,data29_14,data29_13,data29_12,data29_11,data29_10,data29_9,data29_8,data29_7,data29_6,data29_5,data29_4,data29_3,data29_2,data29_1,data29_0,data28_15,data28_14,data28_13,data28_12,data28_11,data28_10,data28_9,data28_8,data28_7,data28_6,data28_5,data28_4,data28_3,data28_2,data28_1,data28_0,data27_15,data27_14,data27_13,data27_12,data27_11,data27_10,data27_9,data27_8,data27_7,data27_6,data27_5,data27_4,data27_3,data27_2,data27_1,data27_0,data26_15,data26_14,data26_13,data26_12,data26_11,data26_10,data26_9,data26_8,data26_7,data26_6,data26_5,data26_4,data26_3,data26_2,data26_1,data26_0,data25_15,data25_14,data25_13,data25_12,data25_11,data25_10,data25_9,data25_8,data25_7,data25_6,data25_5,data25_4,data25_3,data25_2,data25_1,data25_0,data24_15,data24_14,data24_13,data24_12,data24_11,data24_10,data24_9,data24_8,data24_7,data24_6,data24_5,data24_4,data24_3,data24_2,data24_1,data24_0,data23_15,data23_14,data23_13,data23_12,data23_11,data23_10,data23_9,data23_8,data23_7,data23_6,data23_5,data23_4,data23_3,data23_2,data23_1,data23_0,data22_15,data22_14,data22_13,data22_12,data22_11,data22_10,data22_9,data22_8,data22_7,data22_6,data22_5,data22_4,data22_3,data22_2,data22_1,data22_0,data21_15,data21_14,data21_13,data21_12,data21_11,data21_10,data21_9,data21_8,data21_7,data21_6,data21_5,data21_4,data21_3,data21_2,data21_1,data21_0,data20_15,data20_14,data20_13,data20_12,data20_11,data20_10,data20_9,data20_8,data20_7,data20_6,data20_5,data20_4,data20_3,data20_2,data20_1,data20_0,data19_15,data19_14,data19_13,data19_12,data19_11,data19_10,data19_9,data19_8,data19_7,data19_6,data19_5,data19_4,data19_3,data19_2,data19_1,data19_0,data18_15,data18_14,data18_13,data18_12,data18_11,data18_10,data18_9,data18_8,data18_7,data18_6,data18_5,data18_4,data18_3,data18_2,data18_1,data18_0,data17_15,data17_14,data17_13,data17_12,data17_11,data17_10,data17_9,data17_8,data17_7,data17_6,data17_5,data17_4,data17_3,data17_2,data17_1,data17_0,data16_15,data16_14,data16_13,data16_12,data16_11,data16_10,data16_9,data16_8,data16_7,data16_6,data16_5,data16_4,data16_3,data16_2,data16_1,data16_0,data15_15,data15_14,data15_13,data15_12,data15_11,data15_10,data15_9,data15_8,data15_7,data15_6,data15_5,data15_4,data15_3,data15_2,data15_1,data15_0,data14_15,data14_14,data14_13,data14_12,data14_11,data14_10,data14_9,data14_8,data14_7,data14_6,data14_5,data14_4,data14_3,data14_2,data14_1,data14_0,data13_15,data13_14,data13_13,data13_12,data13_11,data13_10,data13_9,data13_8,data13_7,data13_6,data13_5,data13_4,data13_3,data13_2,data13_1,data13_0,data12_15,data12_14,data12_13,data12_12,data12_11,data12_10,data12_9,data12_8,data12_7,data12_6,data12_5,data12_4,data12_3,data12_2,data12_1,data12_0,data11_15,data11_14,data11_13,data11_12,data11_11,data11_10,data11_9,data11_8,data11_7,data11_6,data11_5,data11_4,data11_3,data11_2,data11_1,data11_0,data10_15,data10_14,data10_13,data10_12,data10_11,data10_10,data10_9,data10_8,data10_7,data10_6,data10_5,data10_4,data10_3,data10_2,data10_1,data10_0,data9_15,data9_14,data9_13,data9_12,data9_11,data9_10,data9_9,data9_8,data9_7,data9_6,data9_5,data9_4,data9_3,data9_2,data9_1,data9_0,data8_15,data8_14,data8_13,data8_12,data8_11,data8_10,data8_9,data8_8,data8_7,data8_6,data8_5,data8_4,data8_3,data8_2,data8_1,data8_0,data7_15,data7_14,data7_13,data7_12,data7_11,data7_10,data7_9,data7_8,data7_7,data7_6,data7_5,data7_4,data7_3,data7_2,data7_1,data7_0,data6_15,data6_14,data6_13,data6_12,data6_11,data6_10,data6_9,data6_8,data6_7,data6_6,data6_5,data6_4,data6_3,data6_2,data6_1,data6_0,data5_15,data5_14,data5_13,data5_12,data5_11,data5_10,data5_9,data5_8,data5_7,data5_6,data5_5,data5_4,data5_3,data5_2,data5_1,data5_0,data4_15,data4_14,data4_13,data4_12,data4_11,data4_10,data4_9,data4_8,data4_7,data4_6,data4_5,data4_4,data4_3,data4_2,data4_1,data4_0,data3_15,data3_14,data3_13,data3_12,data3_11,data3_10,data3_9,data3_8,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_15,data2_14,data2_13,data2_12,data2_11,data2_10,data2_9,data2_8,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_15,data1_14,data1_13,data1_12,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_15,data0_14,data0_13,data0_12,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel4,sel3,sel2,sel1,sel0];
			20 [LPM_PIPELINE=0,LPM_WIDTHS=3,LPM_SIZE=8,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data7_15,data7_14,data7_13,data7_12,data7_11,data7_10,data7_9,data7_8,data7_7,data7_6,data7_5,data7_4,data7_3,data7_2,data7_1,data7_0,data6_15,data6_14,data6_13,data6_12,data6_11,data6_10,data6_9,data6_8,data6_7,data6_6,data6_5,data6_4,data6_3,data6_2,data6_1,data6_0,data5_15,data5_14,data5_13,data5_12,data5_11,data5_10,data5_9,data5_8,data5_7,data5_6,data5_5,data5_4,data5_3,data5_2,data5_1,data5_0,data4_15,data4_14,data4_13,data4_12,data4_11,data4_10,data4_9,data4_8,data4_7,data4_6,data4_5,data4_4,data4_3,data4_2,data4_1,data4_0,data3_15,data3_14,data3_13,data3_12,data3_11,data3_10,data3_9,data3_8,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_15,data2_14,data2_13,data2_12,data2_11,data2_10,data2_9,data2_8,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_15,data1_14,data1_13,data1_12,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_15,data0_14,data0_13,data0_12,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel2,sel1,sel0];
		}
	}
	altdpram.tdf
	{
		altdpram [DEVICE_FAMILY,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDADDRESS_REG=OUTCLOCK,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS,WIDTHAD,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,a_hdffe.inc,aglobal.inc]
		{
			29 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=UNREGISTERED,RDADDRESS_ACLR=ON,RDADDRESS_REG=UNREGISTERED,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS=32,WIDTHAD=5,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q15,q14,q13,q12,q11,q10,q9,q8,q7,q6,q5,q4,q3,q2,q1,q0,wren,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0,wraddress4,wraddress3,wraddress2,wraddress1,wraddress0,inclock,rdaddress4,rdaddress3,rdaddress2,rdaddress1,rdaddress0];
			19 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=UNREGISTERED,RDADDRESS_ACLR=ON,RDADDRESS_REG=UNREGISTERED,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS=8,WIDTHAD=3,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q15,q14,q13,q12,q11,q10,q9,q8,q7,q6,q5,q4,q3,q2,q1,q0,wren,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0,wraddress2,wraddress1,wraddress0,inclock,rdaddress2,rdaddress1,rdaddress0];
		}
	}
	lpm_ram_dp.tdf
	{
		lpm_ram_dp [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altdpram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			28 [DEVICE_FAMILY=FLEX10K,LPM_FILE=NO_FILE,LPM_OUTDATA=unregistered,LPM_WRADDRESS_CONTROL=registered,LPM_RDADDRESS_CONTROL=unregistered,LPM_INDATA=registered,LPM_NUMWORDS=0,LPM_WIDTHAD=5,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,WRCLOCK,WREN,WRADDRESS0,WRADDRESS1,WRADDRESS2,WRADDRESS3,WRADDRESS4,DATA0,DATA1,DATA2,DATA3,DATA4,DATA5,DATA6,DATA7,DATA8,DATA9,DATA10,DATA11,DATA12,DATA13,DATA14,DATA15,RDADDRESS0,RDADDRESS1,RDADDRESS2,RDADDRESS3,RDADDRESS4];
			18 [DEVICE_FAMILY=FLEX10K,LPM_FILE=NO_FILE,LPM_OUTDATA=unregistered,LPM_WRADDRESS_CONTROL=registered,LPM_RDADDRESS_CONTROL=unregistered,LPM_INDATA=registered,LPM_NUMWORDS=0,LPM_WIDTHAD=3,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,WRCLOCK,WREN,WRADDRESS0,WRADDRESS1,WRADDRESS2,DATA0,DATA1,DATA2,DATA3,DATA4,DATA5,DATA6,DATA7,DATA8,DATA9,DATA10,DATA11,DATA12,DATA13,DATA14,DATA15,RDADDRESS0,RDADDRESS1,RDADDRESS2];
		}
	}
	altram.tdf
	{
		altram [DEVICE_FAMILY,USE_EAB=ON,REGISTERINPUTMODE=DEFAULT,FILE=NO_FILE,NUMWORDS,AD_WIDTH,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,aglobal.inc]
		{
			46 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE=dmemory3.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0,ClockI];
			17 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE=dmemory2.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0,ClockI];
		}
	}
	lpm_ram_dq.tdf
	{
		lpm_ram_dq [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			45 [DEVICE_FAMILY=FLEX10K,LPM_FILE=dmemory3.mif,LPM_OUTDATA=unregistered,LPM_ADDRESS_CONTROL=unregistered,LPM_INDATA=registered,LPM_NUMWORDS=0,LPM_WIDTHAD=8,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,WE,INCLOCK,address0,address1,address2,address3,address4,address5,address6,address7,DATA0,DATA1,DATA2,DATA3,DATA4,DATA5,DATA6,DATA7,DATA8,DATA9,DATA10,DATA11,DATA12,DATA13,DATA14,DATA15];
			16 [DEVICE_FAMILY=FLEX10K,LPM_FILE=dmemory2.mif,LPM_OUTDATA=unregistered,LPM_ADDRESS_CONTROL=unregistered,LPM_INDATA=registered,LPM_NUMWORDS=0,LPM_WIDTHAD=8,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,WE,INCLOCK,address0,address1,address2,address3,address4,address5,address6,address7,DATA0,DATA1,DATA2,DATA3,DATA4,DATA5,DATA6,DATA7,DATA8,DATA9,DATA10,DATA11,DATA12,DATA13,DATA14,DATA15];
		}
	}
	idecode.vhd
	{
		idecode [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS,U3031072.DLS,U1546459.DLS]
		{
			8 [] [];
		}
	}
	altrom.tdf
	{
		altrom [DEVICE_FAMILY,REGISTERINPUTMODE=DEFAULT,FILE,NUMWORDS,AD_WIDTH,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,aglobal.inc]
		{
			44 [DEVICE_FAMILY=FLEX10K,REGISTERINPUTMODE=DEFAULT,FILE=program3.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q31,Q30,Q29,Q28,Q27,Q26,Q25,Q24,Q23,Q22,Q21,Q20,Q19,Q18,Q17,Q16,Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0];
			7 [DEVICE_FAMILY=FLEX10K,REGISTERINPUTMODE=DEFAULT,FILE=program2.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q31,Q30,Q29,Q28,Q27,Q26,Q25,Q24,Q23,Q22,Q21,Q20,Q19,Q18,Q17,Q16,Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0];
		}
	}
	lpm_rom.tdf
	{
		lpm_rom [DEVICE_FAMILY,LPM_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altrom.inc,aglobal.inc]
		{
			43 [DEVICE_FAMILY=FLEX10K,LPM_FILE=program3.mif,LPM_OUTDATA=unregistered,LPM_ADDRESS_CONTROL=unregistered,LPM_NUMWORDS=0,LPM_WIDTHAD=8,LPM_WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31,ADDRESS0,ADDRESS1,ADDRESS2,ADDRESS3,ADDRESS4,ADDRESS5,ADDRESS6,ADDRESS7];
			6 [DEVICE_FAMILY=FLEX10K,LPM_FILE=program2.mif,LPM_OUTDATA=unregistered,LPM_ADDRESS_CONTROL=unregistered,LPM_NUMWORDS=0,LPM_WIDTHAD=8,LPM_WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31,ADDRESS0,ADDRESS1,ADDRESS2,ADDRESS3,ADDRESS4,ADDRESS5,ADDRESS6,ADDRESS7];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			39 [DEPTH=0,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data31,data30,data29,data28,data27,data26,data25,data24,data23,data22,data21,data20,data19,data18,data17,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			26 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
			4 [DEPTH=0,WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,data5,data6,data7,data8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
			5 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,result0];
			13 [DEPTH=0,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			3 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
			12 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,datab12,datab13,datab14,datab15,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,dataa12,dataa13,dataa14,dataa15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			2 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
			11 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAA9,DATAA10,DATAA11,DATAA12,DATAA13,DATAA14,DATAA15,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,DATAB9,DATAB10,DATAB11,DATAB12,DATAB13,DATAB14,DATAB15,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8,RESULT9,RESULT10,RESULT11,RESULT12,RESULT13,RESULT14,RESULT15];
			14 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
		}
	}
	ifetch.vhd
	{
		ifetch [] [U1546459.DLS,U3031072.DLS,U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			1 [] [];
		}
	}
	control.vhd
	{
		control [] [U1546459.DLS,U3031072.DLS,U3877600.DLS,U4470260.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			9 [] [];
		}
	}
	execute.vhd
	{
		execute [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U4470260.DLS,U3877600.DLS]
		{
			10 [] [];
		}
	}
	dmemory.vhd
	{
		dmemory [] [U1546459.DLS,U3031072.DLS,U3877600.DLS,U4470260.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			15 [] [];
		}
	}
	top_mips.vhd
	{
		top_mips [] [U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	top_mips::(0,0):(0): top_mips.vhd
	{
		ifetch:1:(141,15):(575,ife): ifetch.vhd
		{
			lpm_add_sub:2:(29,1):(440): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(61,adder): addcore.tdf;
				altshift:4:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_rom:43:(34,22):(563,inst_memory): lpm_rom.tdf
			{
				altrom:44:(63,3):(70,srom): altrom.tdf;
			}
		}
		idecode:8:(155,14):(576,id): idecode.vhd
		{
			lpm_ram_dp:18:(55,15):(497,reg1): lpm_ram_dp.tdf
			{
				altdpram:19:(149,7):(71,sram): altdpram.tdf
				{
					lpm_mux:20:(227,4):(72,mux): lpm_mux.tdf
					{
						bypassff:21:(83,17):(177,sel_latency_ff0): bypassff.tdf;
						altshift:13:(89,2):(188,external_latency_ffs): altshift.tdf;
						muxlut:22:(182,21):(226): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(249): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(272): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(295): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(318): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(341): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(364): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(387): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(410): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(433): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(456): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(479): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(502): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(525): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(548): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(571): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
					}
					lpm_decode:25:(230,4):(226,wdecoder): lpm_decode.tdf
					{
						altshift:26:(76,2):(42,external_latency_ffs): altshift.tdf;
						declut:27:(95,5):(64,decoder): declut.tdf;
					}
				}
			}
			lpm_ram_dp:18:(75,15):(498,reg2): lpm_ram_dp.tdf
			{
				altdpram:19:(149,7):(71,sram): altdpram.tdf
				{
					lpm_mux:20:(227,4):(72,mux): lpm_mux.tdf
					{
						bypassff:21:(83,17):(177,sel_latency_ff0): bypassff.tdf;
						altshift:13:(89,2):(188,external_latency_ffs): altshift.tdf;
						muxlut:22:(182,21):(226): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(249): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(272): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(295): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(318): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(341): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(364): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(387): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(410): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(433): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(456): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(479): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(502): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(525): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(548): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
						muxlut:22:(182,21):(571): muxlut.tdf
						{
							muxlut:23:(209,27):(45): muxlut.tdf;
							muxlut:23:(209,27):(64): muxlut.tdf;
							muxlut:24:(232,21):(83): muxlut.tdf;
						}
					}
					lpm_decode:25:(230,4):(226,wdecoder): lpm_decode.tdf
					{
						altshift:26:(76,2):(42,external_latency_ffs): altshift.tdf;
						declut:27:(95,5):(64,decoder): declut.tdf;
					}
				}
			}
		}
		control:9:(171,14):(577,ctl): control.vhd;
		execute:10:(187,14):(578,exe): execute.vhd
		{
			lpm_add_sub:11:(82,25):(964): lpm_add_sub.tdf
			{
				addcore:12:(212,4):(82,adder): addcore.tdf;
				altshift:13:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:11:(83,25):(1077): lpm_add_sub.tdf
			{
				addcore:12:(212,4):(82,adder): addcore.tdf;
				altshift:13:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:14:(31,1):(1880): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(61,adder): addcore.tdf;
				altshift:4:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		dmemory:15:(203,15):(579,mem): dmemory.vhd
		{
			lpm_ram_dq:45:(31,22):(49,data_memory): lpm_ram_dq.tdf
			{
				altram:46:(101,5):(70,sram): altram.tdf;
			}
		}
	}
}

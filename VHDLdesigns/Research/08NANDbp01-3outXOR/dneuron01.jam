' Copyright (C) 1988-2001 Altera Corporation
' Any megafunction design, and related net list (encrypted or decrypted),
' support information, device programming or simulation file, and any other
' associated documentation or information provided by Altera or a partner
' under Altera's Megafunction Partnership Program may be used only to
' program PLD devices (but not masked PLD devices) from Altera.  Any other
' use of such megafunction design, net list, support information, device
' programming or simulation file, or any other related documentation or
' information is prohibited for any other purpose, including, but not
' limited to modification, reverse engineering, de-compiling, or use with
' any other silicon devices, unless such use is explicitly licensed under
' a separate agreement with Altera or a megafunction partner.  Title to
' the intellectual property, including patents, copyrights, trademarks,
' trade secrets, or maskworks, embodied in any such megafunction design,
' net list, support information, device programming or simulation file, or
' any other related documentation or information provided by Altera or a
' megafunction partner, remains with Altera, the megafunction partner, or
' their respective licensors.  No other licenses, including any licenses
' needed under any third party's intellectual property, are provided herein.

'Device #1: EPM7192S - c:\vhdldesigns\research\08nandbp01-3outxor\dneuron01.pof Thu May 16 09:29:54 2002

NOTE "CREATOR" "Altera Jam/STAPL Composer Version 10.1 06/12/2001";
NOTE "DATE" "2002/05/16";
NOTE "DEVICE" "EPM7192S";
NOTE "FILE" "dneuron01.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "071920DD";
NOTE "UES" "FFFF";
NOTE "CHECKSUM" "0025EF5A";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A21, A22, A25, A43";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "12";
ACTION PROGRAM = PR_INIT_PROGRAM, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED, DO_SECURE OPTIONAL,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION BLANKCHECK = PR_INIT_BLANKCHECK, PR_EXECUTE;
ACTION VERIFY = PR_INIT_VERIFY,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION ERASE = PR_INIT_ERASE, PR_EXECUTE;
ACTION READ_UES = PR_INIT_READ_UES, PR_EXECUTE;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
INTEGER A12[1] = 6;
INTEGER A59[1] = 360;
INTEGER A60[1] = 1;
INTEGER A61[1] = 119087325;
INTEGER A13[1] = 5;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
BOOLEAN A21[175680] = @
8N500u@@@tl@xl@@@Vt@zV_l@@z@Vlh@@zsUlsBxzRFltxzqQjMTltRvzUxrrVjk
_@@VwzMh_txFm7y@H@@@pQ@Mhl_jVrwtxUxtRP@VlxUQjdM@_hxl@VlrldiUlrzV
@sRhr@tlV@btRzRplrxUzV@fr@zh@xjpxzUFhrQTj_hL_@@@zx@w7l4ktlzYd1kt
xfyUlzwojMNttzDzUhLtxj@s@xTrlt3w@@qtN@NlQz@VlzxbixltzVbsJh@@rrtz
ltg@NMltw_lRxirg@xtl@oxb_lxswTl6i1qw@6m@z@vzUldLQjkMzrwmZHyaGuzW
@z_V@@@@901_@@lCO@ro0mVpltQl@U30qQlM6ytxT@@lf10jEyCmwl@hl@wTj_@r
MgLJvl_AftwRsS@zUuPWVj_@uP3zUlKMhrxvzMF7FOu@_hb@@@cVlrU@z_@grUjy
@ltx_@VJ@@QTqQWrx@NV@rxQz@xjrxlAQZqo@Dolw@xTzUlrqQvKZ76yvV@7jCml
zUDuVGm@hdtQzVU@_Fs@@@bUVGx@t@AUaW@UlNrQlMU@txZ7C4yCGhtRljUlrWd1
illt3U6uJh@FuX1@sxjO93EQzszxFwvjMVcttzj7uzVsR@@_@@lyV@bo@@VpFtQl
@UzVrQlM_@sxZM9eVxNow@@hl@wLj_@zswTNzl@Qv@_xpr@zkUlsQQbUhHhAylsx
5yE9QvXrxzteL2XM3SxVl7yUm@@VTaE1@RzUnI9yroz7fD0t@@Vmx1@UAz1l7ito
@hVwtowU@RiqW8T2k@ltZbFu@@lDQvXlMlV@WlUUhr@vjzlp@@ttR@xh@@@BttVj
Sl@tyxjsxltzMjshbx@zUt@@RwzMh3yCmwfEfl@wTj6XqswzNTltQv@UxtzxzkQl
tQQjUfX7L4BLXlMlFV@lUUhr@vTwzxzt@r@x@lt@zhGB3yhjs7QbWv@@bGB3qlzB
9Lh@rNFrgIz@UBz_hX79etxbEI33@xzQ1Uduz_hbtx@Ma63k@rMK@lIPjKs7pojL
Of1HQ6uR@qo@zpVqY4Hf9ulNxt@UlLOP2MgrxvzMlBtUlEmR3tUhy1UCeH8jsUhJ
d_jVBg@@l__htbw@tRhNVr@_hb@xlRtztxnXXmlzMFiq3x@@NnX9ujt@Njshb_@z
_0F9qQ0m7boGOf4_sl@3QPWVxrUCC3_Iz_ZXDWd@@VOf7Hf94jmGe56XqC4jmG8j
1wjrhZItmltQRKg4wtsjY7Um@zNVyW7nIIetQlEeT6B@@l__hd3FKn@UjN8D9k@@
lYXJmVj@lQbNhOO6KlzR5U8Xh@xzGwDyltw5X3cGQL4BX1@xlM_l@sZInW@@@7_x
@@X3JmVlrl@zUFlsxj1ysm@@sl@7OD@9xNX3bmz@vc6XqQxjEfwtwj2fbGum4SVV
lhthjEaM21UU8S83KhrxvzMlhdUlESO2y_@@jzUw7@pWmX64mp0LQlMnXCGz@Qbr
MzRSB@InXO8I33XqaGz@@VmI3yQjt7ES3@@@xn@mmzl@c_@rQxbk@HQE96c1Q@@@
ZEsIum4YEoGyl7qw@tRhtVn@_hb@pl@GQIu@@FEKA3Mjtx3bAX@FGFlrw@yk@xT@
Vtgd_ld@@za_hdIw@RBcrIvYbW1l@wz8S6eVxro@jtlx1xTzUlrKQzM3MYXMxz_8
hFehrxr__hdtQTVU@x@_Dudyjx@hpz@oezLBZG@jWb6eMxbo@@Ukx@@Dz@BrcRz@
ZiQWk@wTj_@jswzJzl@Qf@_xtz@rUaL3yhq@x@@@9KgD_t@lYToWQjMh8DLer@lt
Mj@A@zNheKXuVltpBzUF@qxzukIufM_FKQ8o@Nhjdw@7uHYWMX4TiY0jIu@@Vo@z
NBz@@D@Uhz_xjtLhzQP@Vltz@@csxrwmmCerUlFw86nXO8sPEgrEjy@lsx_@VJ@@
QbzMxUyR@MM@_EzzNj7IJbeo9esxrA8j4y_zViW@@p__@s@l@Lum42qkXM@@smXd
4aE1jUlMniJmJhtkV@JFlrwty_l@zV@@BzxtFCS2_zMv3qQG0FC27QGuXJetUl7e
T6t@tRw@Nhjtw@6@RcmIjW@@VAcD3k@ttq@lMRlr@E6M2X33nt@rV4z7YMmGCxJS
x@l5pE1f@ljH79nt@jVi4I2XhImoGylz@7lN2_jsx1uXX@@@x0yCG@zJR4TI4_d4
swzK5jHQv@6vbrszUyU64_t6yRhtZ6y1@@lSShr@3mR3_@pzk@@t2@p0zR@MX@PW
M@@UBrgf_tVbqRzTP_@UFQG32@R3sjtx1ffIyUC4aM2XXnGGQ9etxjE8j4YMWXeZ
C8QG9urwzpzxrpRj6Cl@tV@@T@k@@@z@HVv@_hb@@@I0FIOlL@FO99yVzzx_@UNj
tRTqW9uVy@FkB9utUlhtwrAqn4yrwDm@@rpRj_FltVRz@l@sz@_DztVP@_hbz_@M
qWFexTjEqH6qwUtRhtVr_khb@xkVt@shwzUhfrgj6S83_wl@3Ty1zQlMHIoW@xNF
lrw@y_@Jzt@tv@l@p@z@b@xlM_@VR_zMxzdx@hKxrAum4itwxhVvtow@@gl@wTjw
@zHIcWv@xTzQlrHQ4IuVdetRjEI3RY31Ze1FnktQh@U_VrIlM1fnW_jVAh@@l__B
t3Tq0@plK1fjHiJa4I336jrQP4QkvtRjEqH6q8aMRlrfK@slbr@VNR@qx1unWxxx
zG7P8oA9YpK2NjU@2_NzyMhlpxx@s@@_l@zZU@@@JwlwAv@ljuMBbFmI32Tq0z@h
qsBjzrlTR52t31uPGSN64df1wt@@3AD1@zO@_txzyQlN7KA3wjtg3AD1Ut@zkFed
qj@tp@@_AEp427AaGfC8MH3eqwjwNf@FS89Y2L2zshrHX_WVw@VTk@N1fzGuG6e@
VjES83i_@T6E43wl@_T@Tj75A6_Rz_ZHD1zUhM1bwX@xjM_@tRnmSY@xltGuU8y0
CqxrQ5Zg7_lxQv@llvtRjECiDqQ0m75Q2k@ltbxzMJhrRrlK@V0j6u@@Ft7@zV0j
9urUhFipMytR4YMxroevUBh@@jOKDGzMlLuGQ51R2Uhr@LfTAvVRjoy@@M8h6eTR
tA4E9S@VkhtxjcMhtI4iIultRt@UldNRz_WILHltQVOdC41R2M@p9zzNlhr8aFMH
Iytxr72tC_xz@LhzA5Gx3M@VMjzNlhr@lBwt4S@VF7zh1_ro@ZPxamE9n@zUFx@@
j0Qb8IIF2fXX8wg8SNCSxjs7kh1_ttxSz@l5VB31qQGScOuV_@FKv4ytpz7Ci7Xb
KKWMgehrxr_6eN0U6ut@lr@l@l@@@B_dVj1fnGmm6e@VjAoP3i_z@6Ci11uPW@xl
VtZsx1ubGi4O4x43wjsh1qwz7gy3_x@l27w1@@xjHByGin9uVzrolztlxVxzmXa8
I36Yiw1zswr_Qz6mVwwvjMxFoP6yV@L6Ea1nIaWx@@9z@hb1MMX@xlVt@thX39HS
rF4ZA3nmaWtQDOUd_xXxQW@FuB@tUjy@@tyxjM7kh4wt_bagziAhdQLf_VNOs94A
r3HumG4iLetUhcNht77WNFlrw@ysU_z_pzw_z@tx@@b@xlsOOI8m332trWGfCmw@
DPS894cT2gzUfZhEaOOO8KgAYhkYGfg8UlMqxjQPjKl7tRzkUxzQ0jU@wVTzyMhz
pxl@t@s@l@@zHi@@NHTNX_@rQhj_@naRWl_wTj_@zsovN3LE1zUFbHTNX@Ql@eKi
9qH3Y3n0xj_x1bQ0l@wzGQwoVl@lQjLB@@xzkzlt2xK2Jz_h_tVjuV@z7Su9nTzG
8wI4aM5HqLHWq64Nj41IBHKPF4YE6y@@N2acXWXh8GQ32Ip0zUkrqIzMZlrc0Qt8
yUC4jHQv@6vZzszUuzC4zx6MhbxvvMlhtUlsNhdl@@NFlbw@ys3yG@@@px@@tlz@
L0y64Ul1grUj2ltW0uDGtsjLq_64Ul1yNVjyV@zxk@UFyU3YLS6Ul@fw@V@jx@DW
zl@oeTMRCg6ujM@Nboea_jrQpz@RXmjH0FX4yV2MhrpvzMk7jF3y_xjzdztv@F@t
qz@b@xdMw@@R_zMxYTo0Z_xzg@@tq@lMRjrtF4E3yrNl72d1_tVb2Xp0zSlraQzM
Zayd0yI8KA3Cwltn_@RJ@@AjzMl@ugV80F32fPZmTRn@zNPm@9eMvrI@@UVm394j
l1_yhtro@t7UG2k@lNZiofeVP8gx722l2lQz@n30MmIL4F0UX7CMukL4j0L1mJIm
3850@6nIWNe5K5cT5n3WNi4u572UntIIe5K5fnsXMWN8DS6XJ5_rwlCS@roGuVpl
tQl@U31rQlM6_txT@@lfXGjEBV6qQ8qRftV5m2eb@ReRt@MhgrQfeKgboJf_AW7C
itwthVxtow@@P0FF4Wd1n3a011@D@UhT_hD0KfzQPuVjszltY22rQxjwzuMkjISF
Xu1g8j03SxjsvltGGjsfbX@zUtz@RQ8KhjtwthRxsow@@fj@wTj62TswzN5kXQv@
6wsTlzUm@6uJh@AUW7CyjMx_tRH11AbrIzUSBtMM@@FjrJlgK0WtIlVAW5GBzsGt
cxjM3F813MFjC0yMShbsvlM00jsfb1lrQpzVBQ0GhjMwtZRvMowtxfj_wLb60SMw
rJ5i0Qv@2usSlrgQjMQQjUfX7mW@Q31rQlM6_NxZMG53sFjC0ys22F13Uxzc@@sY
Mm0yR@MM@UF3lt0Rz_fXTQWvVxzW@DmlM@a0hdI60VBkrIvzsB8WMvKIW@Ulv_@j
W78XdIza1xds8ODmRl1GCv6O_tVBUW4i_@UwxdUFOf4yR3y7FG21F8Hq26e00boQ
hUFkbR9fUll__hsrQ0mPhMVLu6ga@BW@KAOGmzN91X@DtUhS_xD4KfSA9uVltT@@
c22LAxjw@wskjaw@@QxlQNhWGdjQ@LWReIwlXk33p0AbQhyLgd4OzKI0mRnjMAdt
Q10KAdI2yMhDtxje00boQfUFkbR9fUldswfMLA0mPfMF5m2eaUBWxW7IWdIzKU0y
4FG5nIG2FbwfO9ImRj0Gi46OktR9M26irJl6BH2_j0kZb81VQzJX7Se0@rQpzUBA
0Khjtgt7y03MgrN1i0Av@2uEM262U81lz621FOWxU@D54gKsRrxrjTR9r@@qsFrU
m39et6wsTlzUm3X4BH8_rwdY70ZO9I8UW7Yb8miJI8ebGoEn0@tG@vkCJU0Om0uV
njNQNCC9aiY1n3WNu1Z5jGT6i@QZMO3h_@lv1u13X@D@UhT9D8X_jRhy0C82d4yV
3zxk@UF276oI8sW7uKhWGVy0u5U0y1FqkM31_SN_Hm6gLCC6ethjEZg4O8ylvsBj
FzB3Cyjtx_@VJ31QTSNCeqGeFGB3yV1z7Fl1HMb03Xljmm2nIlVQ8D6u_tUNjtRT
sO9mGuRpltQdtU3WinCmTl@c22rw0fDGwt@hl_wzinCGu6gb_ReVtzsxv1OWVjwh
eoamz@tM4EB56c12s0jIqX1@QzJ1fLHQ164m3LwzQhfLwjwJh@omrNRCRIeX0jEB
V3a_@@6@36f5WHQGsOuVlE4E3iNw@7273sgzN37w1VQzN2k@QpaB1rQdMv1aWzM@
VTR@MXtRWM3W_OsImz@rU4TIujtG8YE6oapWeZymmzNPE4LaMm3swzJJI2cyuD8O
fDO0ylbdd1gqUjoPo6@r629sPGyUCadd1P9aG2794TaPvVaGeKFaIH29sPGMW6eX
GjAZAgoXeYa2bG@sjLA5Ra9d1C0_tSxbsvlt0GbshbWlzUtz_Rf5OWkjR9h@@l_w
hsp2q0XRWMPob0jIlrqHaGm@UVEYFuxlQFVh7YhsWaa_FKg@3qw@mm2N@slKmIOa
gg4gqUjIqnWyUI8276o3GY4TO8ar7Iq9XaaI8O93oAwXGuOmzl@MqHIap43f1XK4
E9aKeAqAzIZeRZuVI85A32fP3@Ufzv8AK2M64h8C_hD0IPC7lz62vrQGMHL4wOBX
xQGMHXmGuVpjtQVE4Iae33HIQJ4EIaoeJfGPG0F6al56_lW_3ECXOZP8_734ylN7
d9CP9mG_7OakP51f9HIIgahs6XARG2MXapK2kx@t23BXy0ImMj@gmDGhWbU8Ta7C
yjtxk@RB1w4o6BXqlCG@DqVSNCOuwhb1m@cVlqkWqgGwt@hl@gTb60TvRPW_BeRt
ztxgzUheLwbwJh_AkB6ImA1D4gLsBz@rjTRb@X1HqPWmDGB@tGtk@ltLxzMHhrRr
lMzK8SOOlq@FA56YHDA3tVbPdGIsOC4WN2fkPG2764NT21QnG0U6a7G5HTBHkBI4
1R89OPGCRCa8R8XqiHS8seW0jEx4I2mhYinAowt@RSN646M5X@LKot6aA36vzaGU
0R4WN8PdKHS8p4_76H7XHQV9aoe1C0_t2ebXSN_99f7YDM5t@UR1mRGEJ94DO299
nGuz9aMG89KcWxVxzK6D83I3olqWGQO8Yk7Ydt01ReMwlX_3tDX0Bh8St@36_@Gb
JsVl1GcD94d93_whtZLCXS4p9FWAO8yjbNh1gqUjYxw1f@@d__hsLQ0q7Kg1_lWk
phD1VQzN2k@A3333TR@MfgQGyj9u@2wsz@rkUlsweoy8CRrpapWeo8nmrNPCR2vl
t08cj7YTYdapW9xJ9YTQZKaJ8j03owDXCgC8Hs7qV3zd2L213ZH4EI4_t6fvoGuV
9aKe1__hsrQ0qdrR2kxjtJwt3D4gLXxII_qj4zB6XAdJuGIa4y31BvHm@R4kRB9G
@Gq_Cab@9wtkba_@@c8R2HTdGKP85y@CqQzIpsM23VxzvkmWq@@pukW9uVdYS6Z4
AF9acAYSEX8wO8cj7oivdeV@F5v@ZO7cCrDmjtQdtQ3XWmD8bH62Mo0b62THidWx
_hz0B99@3IO8yjbgg1P1AH2bFe@6wEjU62WF1@r62fRQGI@IaBU2fcRGuz6uJh@7
;

BOOLEAN A22[102720] = @
e8300u@@@@3u@@@t@r_lzy@Sx@y@_@p@z@@@5dW@h@aa9uV@@t@@@l@VjV00My0f
s@LvYPYvPm5UXZAw30a8P8r4y@@@xN@gsn080mx8VcN@9wycFmtDR9tsQ7N_XIy9
u@@trzVzjlk@BxVtNU@lt3f1_tl@z@lxdJ3y@@Vvz@@t@_@l@VlV006K0u@TZd1m
BS4GU0W4O3y@@lw@dtDCC4l4Okku7F3aRRDXf@GPdC4U3y@@W2Y@@F6am@@@ll@@
V@@@@_@z_10On3a@@N4A68a70Nu56gX73HI2_@@x3F6O_@@B3RE0U7ibKRhTSz7A
h83n631i1yV@@RJ6yx@p7FC4j60kmH8yI8Ia8UO8yam@@@j@rd_iFXQB1@@@t_@_
xp9Fu@tR70W5DG_tULkOWGU6SXNWWYs00n@@tVam0@@lPXG62U60yEocvtVVmBXm
J2_@V@yzx@x@@ttzF@F@t@V@@T@ZA3y@@_vRrvttl@l@V_@RP2HB30Ix@ho5p4p3
WBy27Lq5081r4y@xxx@@@t@F@l@@@U@_@@nI30U7foy7zNdty1_EOhu13TB9Y1Lq
SDm@ktVqY1W5Eg1l72jL4jI8U4Y@z@V@@@__z@@z@d@x@@tDVaGmxXOf4vS3S_@@
7F2n@@@h@@r@Cl1__p@z@ztx@@_t@@@k@@@tqk1zK3s_6u@tx70W5BGslzeb10A0
4GE0W4sbW@l@Uxv@vs@@@zzd@7ub0mx8Ncx@@1U68r6QFqA1@@@t_d@@z@x@xtz@
7SWxl@@z@4f4y@NVbjyW@VlT00My0n@@Z3h8g8XmZ7O_xx7jiX@X1X8D6wCJm@@V
TjP2_Vz_3yCG4AcPOf43e6qRPGmZ4uxcfYbam@t_l@V_U@@@_576u@z@t_t@@UM2
w@_@NLDmxltVWN2OU0OZ7gm@FVViK5XMLu@@zN@@@l@@yhcK3ETOm@@@VCG2nXF0
l0H8EaXMp4Y4C8EK2vsGJHfF4lPGL23_@@_BYD8mB1@@@@_@zw3BJ8mpW8D92@I8
yWaqq7y@_@NoQW@@x@YQ6YIV0UXZAg30a0lbkRVm_x@ViK200euZ7O8Ey7@@Vl@b
au@sx70W5FG_@RLkOcOU6CXNueYg009ia7xv@@_@@@z@d@dXvXO09KvnW8S94fn0
u58gHuU8I03HuOG6sy1_kPBvsGxHuOm@@lhzy@Sx@yz_@@@z@tVx@@@tx@zl@@@V
@@xOXSOml@@V0F30o@xgo5p4p10Iy03g6bGfA3YqOG8j40U7vpyV7Jdty1_EOfOO
Fu@V@tz@@j@XJH_@@NU@@_3GQW_V@@WK94pB1l@U@00Ce0ml@7Ei2@@u@r1C8W79
5UUOfs6_@@lz@pz7QvXWbCSpqWFN94IZ4@@@vPAJm@@zTCW7y@@lN0qWeZ94@pWe
KI49WXeZCepRE0UtiLyF6y@@@v@xB3X1y@lK3yl@_NGp0@@@V_@l@lebW@z@@8S6
00mY38@tVeK3WJOeYU00fWg1_@@@ylkylpAXmX90yEoZv@zVip4maVe4PD1@@rdX
MCm@@Vl_x@tWh9u@lxtx@@Fl@rV@_t@hNDm@dtF00BKWyq_nmam@@xjlxw@OC64P
z1c@TdXMC8S86_@@sN8wHeK30o@@go5p8GR2rvI8SOE1UIm@ltl@@@Vh@@@98C86
03XIP8mZ4H2O8Kg41UUm@@@FV@@@eZF4UOZeKpepRE0U7iLy09y@@@vz@Etrz@@s
pDyx@@7xyXWMjWlRcIcjrUSN6ylwz7tL2@@@@_@S@xaoW@@@V@@Ut00iu1ox@B25
3CIZ4_@zt2IN1pFt@0jLux@zt@@kl@V_V@@@_zTPuRi11yO8Se10fV@3uLX@@N@0
UI0yEIbvV@VWsSsZRW@Vd@eo9WvOGD2dGXbOOJE3_T@pZIpGO96WyCu4Mg2xt@xX
b8flJ51mJ84F3_@@xZP@0i27rmmBjwyXCzC4BnWmXBfz@@t@F@l@@yBl@tVxT8X@
@@_m@Cm@ldF00BUWyt@X@P0y270a408Hqr26y3bc3am_@3F8@@z1jCm@@@F_@@@x
KO84k42MAaGuO88DIsGB1@@l@1fnGeKC4a63mBS42IxXOOa88D62mZ1@@@x__x@y
@_dR@@tt@V_lxl@V@x@@U@@@z@@VxxUzFc732Qv10y@VnxPGmIFux@@BC06YLq0W
t1UC_@@2unWWbOm@@@UV5CuVztt@@tl@@@N@@@xDYaGyUC00m278sQLeZCSze1_@
@tz@@T7ld1XXn0mx8Tcl@@HuKX@txV@t@@_@@Vz@x@xtt@F2o4y@xhw@@xs@@V@g
Y6u@@xt@ltB00BUWi@@HIMHK1F49P2n@aGa6v4wO2gSWCZxge8qUuKp4y@Txw@d@
d@z@R@H64w831f9a@LlVxv@@_@vxzh@Vvz@@Uho4y@v_lPN21fn0GU@V1WGWGU0G
3fH2xv@@_@vpzz@@7e53C@S@bWDV4hu3_@@lz@@tZw0@tz@sd@@@VVzz@1YQW@@t
BVhV@F3oW@@@R@@U@00ie1o@t75g4H2OWtx@@eGV0uTaDp@z_uzgm@NTszGCKDe1
_@t@JbqWqHPmxlrF00BUWyr@1b_Gke6uVDyFeqAO_tz7Ea11uzW@@lJxv@@U@@pz
T@@h@_@FED9YHrWeoC00W4FG_l@e1hm@@tVeKLmy@@K6syHuGIC6g4fEQGmIRem4
pCaL3YpaX0B917@XIOOI42N2n08X@l@N@_@@_@z_YHr0LkGWHXQGCgFuz_FFia72
3ZXGfa8_d7waCXzAPm@@tVKPC0WPm8WM3y@Vz7L69mvcjY2L2xvFMCy@@ZaK2xv@
@_@@ly@@Vvz_VF0F92ebX8zImj@@V8hI4Wd1XmLHOd6imh1__x@3qo3LEOcOU6SX
KWe6pM5U_p@Zxwa9VDmh@z@MgLux@@t@x@d@@@VV@U@X3nJe5XSrA6_@y_3xC14E
3kHbXH8hgSVg1_V@lw5sWtCV8OO3YbW1LkOcOQ6S3UGYwFD8ylJ2BXXRqO8i4926
sWmIU8A832B1cvcDePF3S@@txV@@zws4y@V@h_@@FYk700OX0attFov4GF0W4wI2
lgmGyUL4vC3vlnW@@@Nxx@_peQGASLuxtx7001Vq2948D3dCPGWqI0yEmFII3mpD
R5CC3_@@NBL81@@v@htPWl@@V@@zhT4bGib9u@tp70W5Ueo6WuPmDmI6y@@l5WN5
0lZaPy@@7WN5_sN@ops0W0s@xwoWl@@lF_Um@lNF009U0eVRgSXCZDsWe5Im@@@l
lj@kW6DuXP32pE16@@VQycFYqu1@@@ZVCP0VtVVV@vNU@s@zx@@x@@lt@@_e@vmx
wTJ82s400On2a@@Nb9c9cd1NO582XPdGkACuxF@ACx40U7umSttF2M92bwXieP8K
g7y@@@x@txBKA9obEXGfI8AK62boW0fbm@@xh@VVTxv@vs@V@F9F1@@@VkzV@z@@
V7Li1_@@yz@F@7rj100Cu1otl7ld4_@V@y@@l7Ri1nap0mx0R6t@pomc32XRZIf3
nzltVGu6eo5p0JpW3S27r0fL1VtiK8hOK6k4sp@@yt@@d8Q2Xio0cZ1tOZb8moA2
PDXm@o9kB3Y9FX8Sg8CxMy@w@x@d@t@@xV5v6C@331XRW@@k@miV8OOX2er0x@y@
_@ply_@@b0T21qQGuzC4GB3npR0I30a0xP8g_4yw@@7Gx31bAX@h@V@@r@_w@ly@
Tl_vW1_@@@zs@tx__@DwtA0Iz@7jV5TkyGq_9mSuvDcyAy@_lRF@n01@@V5zFu@@
V_xV62lF1W8hP2GnC3_N2@lVxMp@@T@p@78z3C@@dZHj2@@ssUzlpj@@_wlt@VCq
4yT@@x@rtzRS3yz@@x@tzFsf40otV7GR5_@@l3ej2cdt@XEYX@@@Sxtx@1xBHGfO
eo534Yp0RyjLOt@@FQV9Y313V@@lwx@@V703@z_@ne_JyyO4QH2Xe@Gq59uz@@E8
S64XY12v1mD8y7Y4uXm3U88D9Y78X8sb86W4Y7eY0ja8I06Y7GYGbb8U0yY3nWWq
a86W4IMtWe5U8CR9Y4WXe5a8SN9YvtWW7g86032UG28F3k1FKHa094QX41mBXzy@
@08J86WAYbu1HeOcOU0SZbGY81O88y7mt1R5B16XM8d@@@y8Dg86W4Yqu1LkOWHQ
KHa0C4Ri4n3WHyUL4BH5n3OG4xI4903XAJIS8x5zR5HDbGa6I4JU5nE9HGBU4Ul1
XMKHC064QX4OU6S3jeY81I8yU9YqGnGBmBa6@YmPZWqI827ay@@EuR00mU_VkzV_
UV@vNUt@@zhVLxPu7m@VwWl100@VtV_x@hyvV@xB@@sl_LjZX00V8e1o000C6GXP
Wa9W1J8X30yU@wN@U@@@Z4m0hn@vcjvpTydNvL@@7G1g2S_@@W1CWQ_RkTT_SFxv
NMr@@Z@73000070CG306a103000000404FW1438mC0o4m09am00UTO0R01m70uTW
0Z100SUZ7upcfa9Rj3B@G1000000GWu@D0dtu1_iPBvoMxmwFKY70ZBynmVJzVdf
L4306dwZXzcwV@z@@reRWz@xV@z@Vs@l@zt@V7P_Cts9HC0O460C13qoxfCu@@@s
@VVl@l_Vt@zz___@T@@tdxh1_@Vxzlz@x@_itVs@Fw_tVzP@V1cbme@9u@@_AbV3
A5N2@@Ttk@@@z@t@Vel1nz@Wl@lV@@V@hhPWl@@R@@z@_k@@z@@_VJU2__@@zV@z
NLE3fbRmx2Cu@@xxqK3_ClYywDmz@t@fjIiNi1_@@@Uas0TTrrgplluNV@fh@wxe
D3yV@@V4HBLG8qs0Qn@@@_hI3yzt@x@l@ka13y@@Vx@@zt@_@F@@xV@x@@_@Fxzl
@@@pE3RqdW@@lwJwDudU3krEX9vV8BE6y@@_zOC3_@@x3dt0@V@@7Bomd4Iiok1w
@_@z@@@xk@@t@@Vjk@@@pwPOGU3wPWXD3I8R23ytt@xx@xp@z@l_@@Vtr@@w@@_r
V@@xkl_t@t@lwhwULTNL__@@y@VTvlx@pttz7@@@V@tVtzyBXl_@@6_Dm@t@lxl@
F@zt@LdQmogCu@@lkk@4q@@@ttF3_@w_RsFXFbVmzztV1@Fu@@xlsW4y@@zl6m3@
gdWl@@V_@@t_l@@_yBX1xDG@V@Vp@9uV_ld@V@l@z@@4dDm@@xl_zkV_tl@w@@@y
@VVhl@@Rq28z@@tvl@@tT@ztwq9qAh1_lwlT@@@hxgxtr@Vjk@_V@@@tw@_@TTtL
7zxCHMcGN39qvl1k@@ltke2z@@@nFOW@x@_2JCG@t@F@@@V@@z@XPOG204m@@zNt
z@tr@6ulx@FtV6y@tVVK_3_x@@z@z@lpB3XbaWx@@@kjJm@@nVc3Cq@03TOOW@@@
kdyDeT_AocW1@@t@_x@@Q0mWG5Ceoawy@@zxE__J@@Vdxw@l9NOm@tzlk@_R@@@t
_@@kzTtzx@kxM@@@lx@@UVtz@0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[29] =
23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[29] =
16,3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[29] =
18,3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[29] =
0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[29] =
0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[15] =
294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0,1025, 4, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[2400];
BOOLEAN A27[5];
BOOLEAN A28[293];
BOOLEAN A31[960];
BOOLEAN A57[960];
BOOLEAN A45[960];
BOOLEAN A29[960];
BOOLEAN A30[960];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
INTEGER V3 = 0;
INTEGER V4 = 32;
BOOLEAN b;
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A18[21];
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
ENDDATA;
PROCEDURE PR_INIT_PROGRAM USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
PROCEDURE DO_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_BLANKCHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE PR_INIT_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE PR_INIT_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_ERASE USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE PR_EXECUTE USES DEVICE_DATA, TEMP_DATA, L6, L26,
L96,
L97, L75, L55, L82,
L257,
L41, L35, L21;
CALL L6;
V3 = 0;
V4 = 1;
CALL L26;
IF (V2 == 0) THEN GOTO L2;
IF (V42 == 0) THEN CALL L97;
IF ((V42 == 0) && V102) THEN CALL L75;
IF ((V42 == 0) && V100) THEN CALL L96;
IF ((V42 == 0) && V103) THEN CALL L55;
IF ((V42 == 0) && V108) THEN CALL L82;
IF ((V42 == 0) && V107) THEN CALL L257;
IF ((V42 == 0) && V104) THEN CALL L41;
L2:
IF ((V42 == 0) && V104) THEN CALL L41;
CALL L21;
EXIT V42;
ENDPROC;
PROCEDURE L6 USES DEVICE_DATA, TEMP_DATA, L30, L276, L32;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L463;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L7;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L7:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L8;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L9;
L8:
l = l + 1;
L9:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L10;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L10:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L11;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L11:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L12;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L12:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L13;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L13:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L14;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L15;
L14:
l = l + 1;
L15:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L16;
V2 = A12[i];
j = A0[V2];
L16:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L17;
V2 = A12[i];
j = A0[V2];
L17:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L18;
V2 = A12[i];
j = A0[V2];
L18:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L19;
V2 = A12[i];
j = A0[V2];
L19:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L20;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L20:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L457;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L457:
NEXT i;
CALL L30;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF (V101) THEN CALL L32;
IF (V42 != 0) THEN GOTO L463;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L458;
A18[9..0] = $071;
CALL L276;
WAIT 10000 USEC;
L458:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L459;
A18[9..0] = $332;
CALL L276;
WAIT 10000 USEC;
L459:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L460;
A18[9..0] = $044;
CALL L276;
WAIT 10000 USEC;
L460:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L463;
A18[9..0] = $065;
CALL L276;
WAIT 1000 USEC;
A18[9..0] = $044;
V91 = V103 || V102;
CALL L276;
V91 = 0;
IF (!V103 && !V102) THEN GOTO L462;
k = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L461;
A31[k] = 0;
A57[k] = 1;
k = k + 1;
A31[k] = 1;
A57[k] = 1;
L461:
k = k + 1;
NEXT i;
DRSCAN k, A29[(k - 1)..0], COMPARE A31[(k - 1)..0],
A57[(k - 1)..0], V40;
IF (!V40) THEN V42 = 10;
L462:
WAIT 10000 USEC;
L463:
ENDPROC;
PROCEDURE L21 USES DEVICE_DATA, TEMP_DATA, L31, L276, L32, L35
;
IF (V42 == 1) THEN GOTO L25;
CALL L31;
IF (!V76) THEN GOTO L22;
A18[9..0] = $003;
V4 = 32;
CALL L276;
L22:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L23;
A18[9..0] = $079;
CALL L276;
WAIT 10000 USEC;
L23:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L24;
A18[9..0] = $006;
CALL L276;
L24:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L25;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
L25:
IF (!V76) THEN GOTO L454;
V80 = 0;
CALL L32;
IF (V42 != 0) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L455;
L454:
A18[9..0] = $3FF;
CALL L276;
IF (V105) THEN CALL L35;
L455:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF (V42 == 10) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF (V42 == 10) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
ENDPROC;
PROCEDURE L26 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L27;
V2 = 0;
V3 = 0;
GOTO L29;
L27:
V2 = A12[j - 1];
V3 = j;
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048))
THEN GOTO L29;
IF (V58) THEN GOTO L28;
A41[9..0] = $066;
GOTO L29;
L28:
A41[9..0] = $006;
L29:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L30 USES DEVICE_DATA, TEMP_DATA, L31
, L272
;
CALL L31;
IF (V32 == 0) THEN CALL L272;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L31 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L32 USES DEVICE_DATA, TEMP_DATA, L31;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L31;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[9..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 32) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L33;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L34;
L33:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L34:
V27 = V27 + 1;
NEXT i;
V27 = 0;
FOR i = 0 TO V1;
IF(A61[i] != 0) THEN GOTO L349;
IF(A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
NEXT i;
GOTO L348;
L349:
V145 = 0;
FOR j = 0 TO 31;
IF(A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
V27 = V27 + 32;
IF(A61[i] != V145) THEN
V42 = 6;
NEXT i;
L348:
ENDPROC;
PROCEDURE L35 USES DEVICE_DATA, TEMP_DATA, L31, L276, L39;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L36;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 2048) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L35_4;
j = V84;
k = V84;
L36:
CALL L31;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L37;
A18[9..0] = $006;
CALL L276;
WAIT 10000 USEC;
L37:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L38;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
L38:
A18[9..0] = $3FF;
CALL L276;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (V4 != 0) THEN CALL L39;
POP k; POP j; POP i;
NEXT i;
L35_4:
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA, L276, L40;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
CALL L276;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
if (!(((V4 == 512) || (V4 == 2048)) && V103)) THEN
CALL L40;
ENDPROC;
PROCEDURE L40 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L41 USES DEVICE_DATA, TEMP_DATA, L31
, L45
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L43;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L44;
L42:
j = V84;
k = V84;
L43:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
IF (((A17[V1 - V84] & 1) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L45;
POP k; POP j; POP i;
NEXT i;
L44:
ENDPROC;
PROCEDURE L45 USES DEVICE_DATA, TEMP_DATA, L276, L287, L214, L157, L50;
V4 = 1;
A18[9..0] = $016;
CALL L276;
DRSCAN V21, A26[(V21 - 1)..0];
A18[9..0] = $01A;
CALL L276;
DRSCAN V21, A26[(V21 - 1)..0];
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 1) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] | 8;
NEXT i;
CALL L287;
V2 = A12[j];
V27 = (V2 - 1) * 2;
i = A49[V27];
V48 = A49[V27 + 1];
V46 = A6[V2];
IF (V48 < (V46 >> 1)) THEN GOTO L46;
V48 = V46 - V48 - 1;
L46:
V27 = j + V24 + (16 * V48) + 12;
FOR V11 = i TO i + 15;
PUSH i;
PUSH V27;
CALL L214;
CALL L157;
POP V27;
POP i;
IF (A31[V27]) THEN
V86 = V86 | (1 << (V11 - i));
NEXT V11;
CALL L50;
ENDPROC;
PROCEDURE L50 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L55 USES DEVICE_DATA, TEMP_DATA, L30, L309, L214, L240;
PRINT "programming 7K device(s)...";
CALL L30;
CALL L309;
FOR V11 = 1 TO 107;
CALL L214;
CALL L240;
NEXT V11;
V49 = 1;
FOR V11 = 109 TO (V32 - 1);
CALL L214;
CALL L240;
NEXT V11;
ENDPROC;
PROCEDURE L69 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = A40[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V38 * 1000) USEC;
IF (V58) THEN GOTO L70;
IF (V82) THEN V83 = 20000;
A18[9..0] = $06A;
CALL L276;
V83 = 5;
A18[9..0] = $06E;
CALL L276;
L70:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L71 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V37 * 100) USEC;
IF (V58) THEN GOTO L72;
A18[9..0] = $06E;
CALL L276;
L72:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L73 USES DEVICE_DATA, TEMP_DATA, L31;
CALL L31;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) || ((A17[i] & 4) == 0))
THEN GOTO L74;
IF (V82 && ((A48[i] & 128) == 0))
THEN A17[i] = A17[i] | 8;
IF (!V82 && ((A48[i] & 128) != 0))
THEN A17[i] = A17[i] | 8;
L74:
NEXT i;
IF (V82) THEN A41[9..0] = $066;
IF (!V82 && V58) THEN A41[9..0] = $006;
ENDPROC;
PROCEDURE L75 USES DEVICE_DATA, TEMP_DATA, L276, L73, L69, L214, L240;
A18[9..0] = $012;
CALL L276;
A18[9..0] = $01E;
CALL L276;
DRSCAN V16, A30[(V16 - 1)..0];
L76:
CALL L73;
b = V58;
IF (V82) THEN V58 = 0;
CALL L69;
V58 = b;
IF (!V82) THEN GOTO L77;
V82 = 0;
GOTO L76;
L77:
A18[9..0] = $01E;
CALL L276;
DRSCAN V16, A29[(V16 - 1)..0];
IF (V103) THEN GOTO L78;
V75 = 1;
FOR V11 = 102 TO 103;
CALL L214;
CALL L240;
NEXT V11;
V75 = 0;
L78:
ENDPROC;
PROCEDURE L82 USES DEVICE_DATA, TEMP_DATA, L30, L309, L299, L214, L157;
IF (V74) THEN PRINT "blank checking 7K device(s)...";
IF (!V74) THEN PRINT "verifying 7K device(s)...";
CALL L30;
CALL L309;
CALL L299;
FOR V11 = 1 TO 101;
CALL L214;
CALL L157;
IF (V42 != 0) THEN V11 = 101;
NEXT V11;
IF (V42 != 0) THEN GOTO L84;
IF (V74 && !V103) THEN GOTO L83;
FOR V11 = 102 TO 103;
CALL L214;
CALL L157;
IF (V42 != 0) THEN V11 = 103;
NEXT V11;
L83:
IF (V42 != 0) THEN GOTO L84;
FOR V11 = 104 TO 107;
CALL L214;
CALL L157;
IF (V42 != 0) THEN V11 = 107;
NEXT V11;
IF (V42 != 0) THEN GOTO L84;
V45 = 1;
FOR V11 = 109 TO 113;
CALL L214;
CALL L157;
IF (V42 != 0) THEN V11 = 113;
NEXT V11;
IF (V42 != 0) THEN GOTO L84;
V45 = 0;
FOR V11 = 114 TO (V32 - 1);
CALL L214;
CALL L157;
IF (V42 != 0) THEN V11 = V32 - 1;
NEXT V11;
L84:
ENDPROC;
PROCEDURE L96 USES DEVICE_DATA, TEMP_DATA
, L82
;
V74 = 1;
IF (V4 == 1) THEN CALL L82;
V74 = 0;
ENDPROC;
PROCEDURE L97 USES DEVICE_DATA, TEMP_DATA, L30, L214, L157, L287, L31;
CALL L30;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 0;
CALL L214;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L98;
CALL L157;
GOTO L99;
L98:
CALL L287;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L99:
FOR i = V1 TO 0 STEP -1;
A48[i] = 0;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L109;
V68 = 0;
FOR j = 0 TO i;
V26 = 0;
V2 = A12[j];
IF (i == j) THEN GOTO L100;
V26 = 1;
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L100;
V26 = A8[V2] >> 1;
L100:
V68 = V68 + V26;
NEXT j;
FOR j = 0 TO 14;
A16[j] = 0;
V46 = A6[V2];
V47 = j / (V46 << 1);
V48 = (j % (V46 << 1)) >> 1;
V69 = 0;
IF (V48 < (V46 >> 1)) THEN GOTO L101;
V69 = 1;
V48 = V46 - V48 - 1;
L101:
V27 = V68 + (((2 * V47) + V69) * V24) +
(16 * V48) + (8 * (~j & 1));
FOR k = 0 TO 7;
IF (USE_FIXED_ALGORITHM) THEN GOTO L102;
IF (A31[V27 + k]) THEN
A16[j] = A16[j] | (1 << k);
GOTO L103;
L102:
IF ((A54[j << 1] & (1 << k)) != 0) THEN
A31[V27 + k] = 1;
IF ((A54[(j << 1) + 1] & (1 << k)) != 0) THEN
A57[V27 + k] = 1;
L103:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A54[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L104;
PUSH i;
CALL L157;
POP i;
IF (V39) THEN V42 = 6;
L104:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L109;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[9] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 300;
V73 = 100;
IF ((V36 & 24) == 16) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1])) THEN
GOTO L108;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L105;
V72 = A14[A16[8] & 31];
V73 = A15[(A16[8] >> 5) & 7];
L105:
IF ((A11[V27 + 2] & 2) != 2) THEN
GOTO L106;
k = 14;
IF (V2 == 2) THEN k = 11;
V72 = A14[((A16[k] >> 3) & 31) + 32];
V73 = A15[(A16[k] & 7) + 8];
L106:
IF ((A11[V27 + 2] & 4) != 4) THEN
GOTO L107;
V72 = 500;
V73 = 500;
L107:
IF ((A11[V27 + 2] & 128) != 128) THEN
GOTO L108;
V82 = 1;
A48[i] = A48[i] | 128;
L108:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L109:
NEXT i;
IF ((V42 == 0) && V82) THEN CALL L31;
ENDPROC;
PROCEDURE L153 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A19[9..0];
CALL L276;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L276;
IF (V34 == 0) THEN GOTO L154;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L156;
L154:
IF (V74) THEN GOTO L155;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A22[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L156;
L155:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L156:
IF (!V40) THEN V39 = 1;
ENDPROC;
PROCEDURE L157 USES DEVICE_DATA, TEMP_DATA, L276, L287, L153, L301, L297, L299;
V39 = 0;
V40 = 1;
IF (V10 > 89) THEN GOTO L158;
A18[9..0] = $016;
CALL L276;
DRSCAN V21, A26[(V21 - 1)..0];
A18[9..0] = $01A;
CALL L276;
DRSCAN V21, A26[(V21 - 1)..0];
L158:
IF (V29 == 0) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[9..0] = $03A;
IF (V29 == 2) THEN
A19[9..0] = $032;
IF (V49) THEN CALL L287;
IF (V34 == 1) THEN GOTO L159;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L160;
L159:
V30 = 0;
V31 = V24 - 1;
L160:
V81 = 0;
V28 = 4;
IF (V10 > 88) THEN V28 = 0;
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
A20[9..0] = $022;
CALL L153;
IF (V29 != 0) THEN GOTO L161;
A19[9..0] = $032;
CALL L153;
A19[9..0] = $036;
L161:
V30 = V30 + V24;
V31 = V31 + V24;
IF (!V45) THEN GOTO L162;
b = 0;
CALL L301;
GOTO L163;
L162:
IF (V10 != V51) THEN GOTO L163;
V44 = 1;
b = 0;
CALL L297;
L163:
A20[9..0] = $026;
CALL L153;
IF (V29 != 0) THEN GOTO L164;
A19[9..0] = $032;
CALL L153;
A19[9..0] = $036;
L164:
V30 = V30 + V24;
V31 = V31 + V24;
IF (!V45) THEN GOTO L165;
b = 1;
CALL L301;
GOTO L166;
L165:
IF (V10 != V51) THEN GOTO L166;
b = 1;
CALL L297;
V44 = 0;
CALL L299;
L166:
IF (V81) THEN GOTO L167;
A18[9..0] = $016;
CALL L276;
POP i;
DRSCAN V21, A26[(((i + 2) * V21) - 1)..((i + 1) * V21)];
PUSH i;
A18[9..0] = $01A;
CALL L276;
POP i;
DRSCAN V21, A26[(((i + 2) * V21) - 1)..((i + 1) * V21)];
PUSH i;
L167:
POP i;
NEXT i;
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L168;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L168:
ENDPROC;
PROCEDURE L214 USES DEVICE_DATA, TEMP_DATA, L276, L309;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L216;
V2 = A12[j];
IF (V11 >= (A0[V2] - 108)) THEN GOTO L215;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 1;
IF (V11 < 108) THEN A28[(107 + V30) - V11] = 1;
GOTO L216;
L215:
IF ((A17[j] & 8) == 0) THEN V49 = 1;
A17[j] = A17[j] | 8;
L216:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $01E;
CALL L276;
DRSCAN V30, A28[(V30 - 1)..0];
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
V2 = A12[j];
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L217;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 0;
IF (V11 < 108) THEN A28[(107 + V30) - V11] = 0;
L217:
V30 = V31 + 1;
NEXT j;
IF (V49 && (V11 == V52)) THEN
CALL L309;
V10 = V11;
ENDPROC;
PROCEDURE L240 USES DEVICE_DATA, TEMP_DATA, L287, L276, L71;
V30 = V14;
IF (V49) THEN CALL L287;
V31 = V30 + (V23 - 1);
IF (V75) THEN GOTO L241;
A18[9..0] = $016;
CALL L276;
DRSCAN V23, A21[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
A18[9..0] = $01A;
CALL L276;
DRSCAN V23, A21[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
GOTO L242;
L241:
A18[9..0] = $016;
CALL L276;
DRSCAN V23, A29[(V23 - 1)..0];
A18[9..0] = $01A;
CALL L276;
DRSCAN V23, A29[(V23 - 1)..0];
L242:
CALL L71;
V14 = V30;
ENDPROC;
PROCEDURE L257 USES DEVICE_DATA, TEMP_DATA, L30, L287, L276
, L214, L240
;
IF (V107 == 0) THEN GOTO L271;
CALL L30;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L258;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L258:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L271;
IF (V106 && (V75 == 0)) THEN
GOTO L263;
IF (V4 != 1) THEN GOTO L259;
V11 = 108;
CALL L214;
CALL L240;
GOTO L263;
L259:
V11 = 0;
L263:
IF (!V106) THEN GOTO L271;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L276;
CALL L30;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L266;
IF ((A17[i] & 16) != 0) THEN GOTO L264;
A17[i] = A17[i] | 16;
GOTO L265;
L264:
A17[i] = A17[i] & ~16;
L265:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L266:
NEXT i;
IF (V75 == 0) THEN GOTO L271;
IF (V4 != 1) THEN GOTO L267;
V11 = 108;
CALL L214;
CALL L240;
GOTO L271;
L267:
V11 = 0;
L271:
V75 = 0;
ENDPROC;
PROCEDURE L272 USES DEVICE_DATA, TEMP_DATA
, L273
;
IF (V4 == 1) THEN CALL L273;
ENDPROC;
PROCEDURE L273 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN
IF (A0[V2] > V32) THEN
V32 = A0[V2];
NEXT i;
V32 = V32 - 108;
ENDPROC;
PROCEDURE L276 USES DEVICE_DATA, TEMP_DATA;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L277;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L277;
V27 = 50;
A32[49..0] = A30[49..0];
L277:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L278;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L280;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L281;
L278:
IF ((A17[i] & 2) != 0) THEN GOTO L279;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L281;
L279:
IF (!V57) THEN GOTO L280;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L281;
L280:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
L281:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L282;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L282:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L283;
STATE IDLE;
WAIT 3 CYCLES;
L283:
ENDPROC;
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L288;
V2 = A12[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L289;
L288:
IF (V74) THEN A30[V24] = 0;
L289:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L297 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L298;
V2 = A12[i];
k = k + (A5[V2] - 1);
IF (V10 != A9[3 * (V2 - 1)]) THEN
GOTO L298;
V27 = (16 * (A6[V2] -
A9[(3 * (V2 - 1)) + 2])) -
A9[(3 * (V2 - 1)) + 1] - 1;
IF (V43) THEN A29[V27 + j] = b;
IF (V44) THEN A30[V27 + j] = b;
L298:
j = k + 1;
NEXT i;
ENDPROC;
PROCEDURE L299 USES DEVICE_DATA, TEMP_DATA;
j = 317;
IF (V51 == -1) THEN V51 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L300;
V2 = A12[i];
IF (V51 >= A9[3 * (V2 - 1)]) THEN
GOTO L300;
IF (j > (A9[3 * (V2 - 1)] - V51)) THEN
j = A9[3 * (V2 - 1)] - V51;
L300:
NEXT i;
IF (j != 317) THEN V51 = V51 + j;
IF (j == 317) THEN V51 = -1;
ENDPROC;
PROCEDURE L301 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L302;
V2 = A12[i];
k = k + (A5[V2] - 1);
V27 = (16 * (A6[V2] -
A10[(2 * (V2 - 1)) + 1])) -
A10[2 * (V2 - 1)] - 1;
A30[V27 + j] = b;
L302:
j = k + 1;
NEXT i;
ENDPROC;
PROCEDURE L309 USES DEVICE_DATA, TEMP_DATA;
j = 317;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L310;
V2 = A12[i];
IF (V52 >= (A0[V2] - 108)) THEN
GOTO L310;
IF (j > A0[V2]) THEN j = A0[V2];
L310:
NEXT i;
IF (j != 317) THEN V52 = j - 108;
IF (j == 317) THEN V52 = -1;
ENDPROC;
' END OF FILE
CRC F92A;

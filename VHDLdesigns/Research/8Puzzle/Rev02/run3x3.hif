HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
		}
	}
	p3x3.vhd
	{
		p3x3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			5 [] [];
		}
	}
	square2.vhd
	{
		square2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			6 [] [];
		}
	}
	square3.vhd
	{
		square3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			7 [] [];
		}
	}
	square4.vhd
	{
		square4 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			8 [] [];
		}
	}
	run3x3.vhd
	{
		run3x3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	run3x3::(0,0):(0): run3x3.vhd
	{
		p3x3:5:(37,13):(865,p3): p3x3.vhd
		{
			square2:6:(135,13):(2628,s8): square2.vhd;
			square3:7:(131,13):(2627,s7): square3.vhd;
			square2:6:(127,13):(2626,s6): square2.vhd;
			square3:7:(123,13):(2625,s5): square3.vhd;
			square4:8:(119,13):(2624,s4): square4.vhd;
			square3:7:(115,13):(2623,s3): square3.vhd;
			square2:6:(111,13):(2622,s2): square2.vhd;
			square3:7:(107,13):(2621,s1): square3.vhd;
			square2:6:(103,13):(2620,s0): square2.vhd;
		}
		p3x3:5:(36,13):(864,p2): p3x3.vhd
		{
			square2:6:(135,13):(2628,s8): square2.vhd;
			square3:7:(131,13):(2627,s7): square3.vhd;
			square2:6:(127,13):(2626,s6): square2.vhd;
			square3:7:(123,13):(2625,s5): square3.vhd;
			square4:8:(119,13):(2624,s4): square4.vhd;
			square3:7:(115,13):(2623,s3): square3.vhd;
			square2:6:(111,13):(2622,s2): square2.vhd;
			square3:7:(107,13):(2621,s1): square3.vhd;
			square2:6:(103,13):(2620,s0): square2.vhd;
		}
		p3x3:5:(35,13):(863,p1): p3x3.vhd
		{
			square2:6:(135,13):(2628,s8): square2.vhd;
			square3:7:(131,13):(2627,s7): square3.vhd;
			square2:6:(127,13):(2626,s6): square2.vhd;
			square3:7:(123,13):(2625,s5): square3.vhd;
			square4:8:(119,13):(2624,s4): square4.vhd;
			square3:7:(115,13):(2623,s3): square3.vhd;
			square2:6:(111,13):(2622,s2): square2.vhd;
			square3:7:(107,13):(2621,s1): square3.vhd;
			square2:6:(103,13):(2620,s0): square2.vhd;
		}
		p3x3:5:(34,13):(862,p0): p3x3.vhd
		{
			square2:6:(135,13):(2628,s8): square2.vhd;
			square3:7:(131,13):(2627,s7): square3.vhd;
			square2:6:(127,13):(2626,s6): square2.vhd;
			square3:7:(123,13):(2625,s5): square3.vhd;
			square4:8:(119,13):(2624,s4): square4.vhd;
			square3:7:(115,13):(2623,s3): square3.vhd;
			square2:6:(111,13):(2622,s2): square2.vhd;
			square3:7:(107,13):(2621,s1): square3.vhd;
			square2:6:(103,13):(2620,s0): square2.vhd;
		}
		lpm_add_sub:1:(61,33):(328): lpm_add_sub.tdf
		{
			altshift:4:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
			altshift:4:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
			altshift:3:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
			addcore:2:(212,4):(55,adder): addcore.tdf;
		}
	}
}

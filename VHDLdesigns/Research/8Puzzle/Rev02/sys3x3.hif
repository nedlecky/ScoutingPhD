HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	run3x3.vhd
	{
		run3x3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			1 [] [];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_CVALUE] []
		{
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=36,LPM_CVALUE=123] [result35,result34,result33,result32,result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0];
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=36,LPM_CVALUE=h'123456780] [result35,result34,result33,result32,result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0];
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=36,LPM_CVALUE=591751040] [result35,result34,result33,result32,result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0];
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=36,LPM_CVALUE=587745125] [result35,result34,result33,result32,result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0];
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=36,LPM_CVALUE=595609445] [result35,result34,result33,result32,result31,result30,result29,result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0];
		}
	}
	dec_7seg.vhd
	{
		dec_7seg [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			11 [] [];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6];
			15 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=WYSIWYG] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6];
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=WYSIWYG] [DATAA0,DATAA1,DATAB0,DATAB1,CIN,RESULT0,RESULT1];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,CONSTANT_CIN=0,CARRY_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,dataa0,dataa1,result0,result1];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			22 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
		}
	}
	p3x3.vhd
	{
		p3x3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			6 [] [];
		}
	}
	square2.vhd
	{
		square2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			7 [] [];
		}
	}
	square3.vhd
	{
		square3 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			8 [] [];
		}
	}
	square4.vhd
	{
		square4 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			9 [] [];
		}
	}
	clkdiv.gdf
	{
		clkdiv [] []
		{
			18 [] [];
		}
	}
	4count.gdf
	{
		4count [] []
		{
			19 [] [];
		}
	}
	sys3x3.gdf
	{
		sys3x3 [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	sys3x3::(0,0):(0): sys3x3.gdf
	{
		run3x3::(0,0):(1): run3x3.vhd
		{
			p3x3:6:(37,13):(936,p3): p3x3.vhd
			{
				square2:7:(148,13):(2736,s8): square2.vhd;
				square3:8:(144,13):(2735,s7): square3.vhd;
				square2:7:(140,13):(2734,s6): square2.vhd;
				square3:8:(136,13):(2733,s5): square3.vhd;
				square4:9:(132,13):(2732,s4): square4.vhd;
				square3:8:(128,13):(2731,s3): square3.vhd;
				square2:7:(124,13):(2730,s2): square2.vhd;
				square3:8:(120,13):(2729,s1): square3.vhd;
				square2:7:(116,13):(2728,s0): square2.vhd;
			}
			p3x3:6:(36,13):(935,p2): p3x3.vhd
			{
				square2:7:(148,13):(2736,s8): square2.vhd;
				square3:8:(144,13):(2735,s7): square3.vhd;
				square2:7:(140,13):(2734,s6): square2.vhd;
				square3:8:(136,13):(2733,s5): square3.vhd;
				square4:9:(132,13):(2732,s4): square4.vhd;
				square3:8:(128,13):(2731,s3): square3.vhd;
				square2:7:(124,13):(2730,s2): square2.vhd;
				square3:8:(120,13):(2729,s1): square3.vhd;
				square2:7:(116,13):(2728,s0): square2.vhd;
			}
			p3x3:6:(35,13):(934,p1): p3x3.vhd
			{
				square2:7:(148,13):(2736,s8): square2.vhd;
				square3:8:(144,13):(2735,s7): square3.vhd;
				square2:7:(140,13):(2734,s6): square2.vhd;
				square3:8:(136,13):(2733,s5): square3.vhd;
				square4:9:(132,13):(2732,s4): square4.vhd;
				square3:8:(128,13):(2731,s3): square3.vhd;
				square2:7:(124,13):(2730,s2): square2.vhd;
				square3:8:(120,13):(2729,s1): square3.vhd;
				square2:7:(116,13):(2728,s0): square2.vhd;
			}
			p3x3:6:(34,13):(933,p0): p3x3.vhd
			{
				square2:7:(148,13):(2736,s8): square2.vhd;
				square3:8:(144,13):(2735,s7): square3.vhd;
				square2:7:(140,13):(2734,s6): square2.vhd;
				square3:8:(136,13):(2733,s5): square3.vhd;
				square4:9:(132,13):(2732,s4): square4.vhd;
				square3:8:(128,13):(2731,s3): square3.vhd;
				square2:7:(124,13):(2730,s2): square2.vhd;
				square3:8:(120,13):(2729,s1): square3.vhd;
				square2:7:(116,13):(2728,s0): square2.vhd;
			}
			lpm_add_sub:15:(64,33):(349): lpm_add_sub.tdf
			{
				altshift:5:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
				altshift:4:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
				addcore:16:(212,4):(55,adder): addcore.tdf;
			}
		}
		lpm_constant::(0,0):(5): lpm_constant.tdf;
		dec_7seg::(0,0):(7): dec_7seg.vhd;
		dec_7seg::(0,0):(8): dec_7seg.vhd;
		clkdiv:18:(0,0):(29): clkdiv.gdf
		{
			4count:19:(0,0):(7): 4count.gdf;
		}
	}
}
